{"version":3,"sources":["../src/datagrid/data-grid.ts"],"names":[],"mappings":"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","file":"data-grid.js","sourcesContent":["import \"./assets/css/datagrid.css!\";\r\nimport jquery = require(\"jquery\");\r\nimport {Render} from \"../core/decorator/d-render\";\r\nimport {EventEmitter} from \"../core/event-emitter\";\r\nimport {AWidget} from \"../widget/abstract/a-widget\";\r\nimport {TextInput} from \"../input/text-input\";\r\nimport {CheckBox} from \"../input/checkbox\";\r\nimport {EGridStyle, EDataGridSortingDirection} from \"./enum/e-data-grid\";\r\nimport {IDataGrid, IDataGridColumn} from \"./interface/i-data-grid\";\r\nimport {ABasicComponent} from \"../component/abstract/a-basic-component\";\r\nimport {EViewSize} from \"../component/enum/e-view-size\";\r\nimport {EMouseEvent} from \"../component/enum/e-mouse-event\";\r\nimport _idom_ = require(\"incremental-dom\");\r\n\r\ninterface IDataGridColumnExtended<T> extends IDataGridColumn<T>{\r\n\t_size_:number;\r\n}\r\n\r\n/**\r\n * <img src=\"../../doc_assets/grid_example.png\" title=\"DataGrid\" alt=\"DataGrid\">\r\n * \r\n * Grid simples para exibição de dados tabulados. Faz a exibição de dados de acordo com os valores informados em \r\n * {@link DataGrid#setColumns} e {@link DataGrid#setData}.\r\n * \r\n * @memberof module:mvcomponents/datagrid\r\n * \r\n * @example\r\n *  interface Pessoa {\r\n *      id: number;\r\n *      nome: string;\r\n *      sobrenome: string;\r\n *      idade: string;\r\n *      pais: string;\r\n *  }\r\n *  let gridForm: Form = new Form();\r\n *  let grid:DataGrid<Pessoa> = new DataGrid<Pessoa>()\r\n *    .setColumns([\r\n *        {name: \"nome\", title: \"Nome\", sortable: true, width: 25},\r\n *        {name: \"sobrenome\", title: \"Sobrenome\", sortable: true, width: 25},\r\n *        {name: \"idade\", title: \"Idade\", sortable: true, width: 25},\r\n *        {name: \"pais\", title: \"País\", sortable: true, width: 25}\r\n *    ])\r\n *    .addTableStyle(EGridStyle.TABLE_HOVER, EGridStyle.TABLE_BORDERED, EGridStyle.TABLE_STRIPED);\r\n * \r\n *    gridForm.append(grid);\r\n * \r\n *    grid.setData([\r\n *        {id: 1, nome: \"Magee\", sobrenome: \"Ross\", idade: \"47\", pais: \"Italy\"},\r\n *        {id: 2, nome: \"Beau\", sobrenome: \"Parrish\", idade: \"40\", pais: \"Uruguay\"}\r\n *    ]);\r\n *\r\n *\r\n * @example\r\n *  //custumizando o html do cabeçalho do campo 'id' e a exibição da coluna 'País'.\r\n *  let grid:DataGrid<Pessoa> = new DataGrid<Pessoa>()\r\n *    .setColumns([\r\n *        {name: \"id\", title: \"\", width: 25,headerRender:col=>`${col.title}*`},\r\n *        {name: \"nome\", title: \"Nome\", sortable: true, width: 25},\r\n *        {name: \"sobrenome\", title: \"Sobrenome\", sortable: true, width: 25},\r\n *        {name: \"idade\", title: \"Idade\", sortable: true, width: 25},\r\n *        {name: \"pais\", title: \"País\", sortable: true, width: 25,render:item=>`Nacionalidade de ${item.pais}`}\r\n *    ]);\r\n *    \r\n * \r\n *    gridForm.append(grid);\r\n * \r\n *    grid.setData([\r\n *        {id: 1, nome: \"Magee\", sobrenome: \"Ross\", idade: \"47\", pais: \"Italy\"},\r\n *        {id: 2, nome: \"Beau\", sobrenome: \"Parrish\", idade: \"40\", pais: \"Uruguay\"}\r\n *    ]);\r\n *\r\n * @example\r\n *  //custumizando o html das linhas do campo 'idade' com um componente.\r\n *  let grid:DataGrid<Pessoa> = new DataGrid<Pessoa>()\r\n *    .setColumns([\r\n *        {name: \"id\", title: \"\", width: 25,\r\n *        {name: \"nome\", title: \"Nome\", sortable: true, width: 25},\r\n *        {name: \"idade\", title: \"Idade\", sortable: true, width: 25, renderElement : $row => new NumericStepper().setValue($row.idade).setSize(12) }\r\n *    ]);\r\n *    \r\n * \r\n *    gridForm.append(grid);\r\n * \r\n *    grid.setData([\r\n *        {id: 1, nome: \"Magee\", sobrenome: \"Ross\", idade: \"47\", pais: \"Italy\"},\r\n *        {id: 2, nome: \"Beau\", sobrenome: \"Parrish\", idade: \"40\", pais: \"Uruguay\"}\r\n *    ]);\r\n * \r\n * @example\r\n *  //custumizando a coluna 'id' como checkable (automaticamente as linhas tambem serao ajustadas para checkbox).\r\n *  let grid:DataGrid<Pessoa> = new DataGrid<Pessoa>()\r\n *    .setColumns([\r\n *        {name: \"id\" , width: 25, checkable:true},\r\n *        {name: \"nome\", title: \"Nome\"},\r\n *        {name: \"sobrenome\", title: \"Sobrenome\"}\r\n *    ]);    \r\n * \r\n *    gridForm.append(grid);\r\n * \r\n *    grid.setData([\r\n *        {id: 1, nome: \"Magee\", sobrenome: \"Ross\", idade: \"47\", pais: \"Italy\"},\r\n *        {id: 2, nome: \"Beau\", sobrenome: \"Parrish\", idade: \"40\", pais: \"Uruguay\"}\r\n *    ]);\r\n * \r\n * @returns {DataGrid}\r\n *\r\n */\r\nexport class DataGrid<T> extends ABasicComponent implements IDataGrid<T>{\r\n\t/**\r\n\t * Armazena as informações das colunas da grid.\r\n\t * @see {@link IDataGridColumn}\r\n\t */\r\n\tprivate columns: IDataGridColumn<T>[];\r\n\t/**\r\n\t * Conjunto de dados exibidos na grid.\r\n\t */\r\n\tprivate data: T[];\r\n\t/**\r\n\t * Armazena os estilos visuais da grid.\r\n\t * @see {@link EGridStyle}\r\n\t */\r\n\tprivate styles: EGridStyle[];\r\n\t/**\r\n\t * Armazena temporariamente os índices das linhas que foram selecionada na grid.\r\n\t */\r\n\tprivate selectedData: number[];\r\n\t/**\r\n\t * Indica se a grid permite seleção múltipla ou não.\r\n\t */\r\n\tprivate singleSelection: boolean;\r\n\t/**\r\n\t * Indica se a grid deve se comportar como infinite scroll.\r\n\t */\r\n\tprivate infiniteScroll: boolean;\r\n\t/**\r\n\t * Texto exibido caso não hajam dados para serem listados.\r\n\t */\r\n\tprivate emptyText: string;\r\n\t/**\r\n\t * Armazena os índices das colunas que foram clicadas para ordenação.\r\n\t */\r\n\tprivate sortingColumns: number[];\r\n\t/**\r\n\t * Indica se a grid está bloqueada ou não. Caso o valor desta variável seja verdadeiro uma div transparente \r\n\t * será exibida sobre a grid.\r\n\t */\r\n\tprivate blocked: boolean;\r\n\t/**\r\n\t * Altura em pixel do componente\r\n\t */\r\n\tprivate height: number;\r\n\t/**\r\n\t * Altura em pixel do componente para ser utilizado caso a propriedade {@link DataGrid.height} não seja informada.\r\n\t */\r\n\tprivate size:string;\r\n\t/**\r\n\t * Largura em coluna do componente para ser utilizado caso a propriedade {@link DataGrid.size} não seja informada.\r\n\t */\r\n\tprivate defaultHeight: number;\r\n\t/**\r\n\t * Evento disparado toda vez que uma linha é clicada na grid.\r\n\t * @see {@link DataGrid.selectRow}\r\n\t */\r\n\tprivate bottom:number;\r\n\r\n\tpublic onItemChecked: EventEmitter<T> = new EventEmitter<T>();\r\n\tpublic onItemUnChecked: EventEmitter<T> = new EventEmitter<T>();\r\n\tpublic onItemCheckeds: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n\tpublic onItemSelect: EventEmitter<T> = new EventEmitter<T>();\r\n\t/**\r\n\t * Evento disparado toda vez que uma coluna ordenável é clicada em qualquer um dos sentidos. O sentindo clicado ficará \r\n\t * habilitado, podendo ser diferenciado visualmente. Caso um dos sentindos habilitados seja clicado novamente a coluna \r\n\t * será removida da ordenação. Este {@link EventEmiter} retorna um {@link IDataGridColumn} cuja proprieade {@link IDataGridColumn.sortingDirection} \r\n\t * terá o valor referente ao sentindo clicado:\r\n\t * <ul>\r\n\t *  <li>para cima: {@link EDataGridSortingDirection.ASCENDING}</li>\r\n\t *  <li>para baixo: {@link EDataGridSortingDirection.DESCENDING}</li>\r\n\t * </ul>\r\n\t * @see {@link DataGrid.addSort}\r\n\t */\r\n\tpublic onSortingChange: EventEmitter<IDataGridColumn<T>[]> = new EventEmitter<IDataGridColumn<T>[]>();\r\n\t/**\r\n\t * Evento disparado quando a barra de scroll da grid atinge o seu limite inferior. A barra de scroll só será ativada quando \r\n\t * o valor da proprieade {@link DataGrid.infiniteScroll} for `true`. Desta forma o usuário poderia utilizar o método {@link DataGrid.addData} \r\n\t * para adicionar mais dados à grid, implementando assim o efeito infinite scroll, a barra de scroll subirá um pouco \r\n\t * informando visualmente que existem mais dados disponíveis.\r\n\t * @see {@link DataGrid.addData}\r\n\t * @see {@link DataGrid.infiniteScroll}\r\n\t */\r\n\tpublic onScrollBottom: EventEmitter<any> = new EventEmitter<any>();\r\n\t/**\r\n\t * Evento disparado apos dois cliques seguidos na linha da grid.\r\n\t */\r\n\tpublic onDoubleClick: EventEmitter<T> = new EventEmitter<T>();\r\n\tprivate autoSort:boolean;\r\n\r\n\tprivate gridRendered:boolean;\r\n\tprivate tableRendered:boolean;\r\n\tprivate gridHeaderRendered:boolean;\r\n\r\n\tconstructor(config?:{autoSort?:boolean}) {  \r\n\t\tsuper(\"div\",\"\");\r\n\t\tthis.setSize(12);\r\n\t\tthis.addStyleName(\"DataGridContainer\");\r\n\t\tthis.data = [];\r\n\t\tthis.styles = [];\r\n\t\tthis.selectedData = [];\r\n\t\tthis.sortingColumns = [];\r\n\t\tthis.emptyText = \"-\";\r\n\t\tthis.singleSelection = true;\r\n\t\tthis.defaultHeight = 400;\r\n\t\tthis.autoSort = config?config.autoSort:false;\r\n\t}\r\n\t/**\r\n\t * Adiciona estilos à grid.\r\n\t * @param {EGridStyle[]} style - Estilos a serem adicionados\r\n\t * @see {@link EGridStyle}\r\n\t * <img src=\"../../doc_assets/datagrid_style_example_4.png\" title=\"EGridStyle.TABLE_CONDENSED\" alt=\"EGridStyle.TABLE_CONDENSED\">\r\n\t * @example <caption>Faz com que as linhas da tabela exibam cores intercaladas.</caption> \r\n\t * myGrid.addTableStyle(EGridStyle.TABLE_STRIPED);\r\n\t * @example <caption>Aplica bordas à todas as células da tabela.</caption> \r\n\t * myGrid.addTableStyle(EGridStyle.TABLE_HOVER, EGridStyle.TABLE_BORDERED, EGridStyle.TABLE_STRIPED);\r\n\t * @example <caption>Diferencia visualmente a linha da tabela na qual o cursor do mouse está sobre.</caption> \r\n\t * myGrid.addTableStyle(EGridStyle.TABLE_HOVER, EGridStyle.TABLE_BORDERED, EGridStyle.TABLE_STRIPED);\r\n\t * @example <caption>Aplica bordas apenas às linhas da tabela.</caption> \r\n\t * myGrid.addTableStyle(EGridStyle.TABLE_HOVER, EGridStyle.TABLE_BORDERED, EGridStyle.TABLE_STRIPED);\r\n\t */\r\n\tpublic addTableStyle(...style: EGridStyle[]): this {\r\n\t\tthis.styles = this.styles.concat(style);    \r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * Atribui os dados que serão exibidos pela grid. Toda vez que este método é chamado a listagem é atualizada.\r\n\t * @param {T[]} data\r\n\t */\r\n\tpublic setData(data:T[]) : this {\r\n\t\tthis.data = <T[]>jquery.extend([], data);\r\n\t\tthis.selectedData = [];\r\n\t\tthis.refresh();\r\n\t\tif(!data || (data && data.length  ===  0)){\r\n\t\t\tjquery(this.element)\r\n\t\t\t\t.find(\"tbody\")\r\n\t\t\t\t.html(`<tr>\r\n\t\t\t\t\t<td \r\n\t\t\t\t\t\tclass=\"text-center is-last-cell\" \r\n\t\t\t\t\t\tcolspan=\"${this.columns.length}\">\r\n\t\t\t\t\t\t${this.emptyText}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>`);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * Adiciona novos dados ao conjunto de dados existente na grid.\r\n\t * @param {T[]} data\r\n\t */\r\n\tpublic addData(data:T[]) : this {\r\n\t\tthis.data = <T[]>jquery.extend([], data.concat(this.data));\r\n\t\tthis.selectedData = [];\r\n\t\tthis.refresh();\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * Atribui o texto que será exibido caso a grid não possua dados para listar.\r\n\t * @param {string} text\r\n\t */\r\n\tpublic setEmptyText(text: string): this {\r\n\t\tthis.emptyText = text;\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * @return {DataGrid}\r\n\t*/\r\n\tpublic clearSelection():this{\r\n\t\tthis.selectedData = [];\r\n\t\tjquery(this.element)\r\n\t\t\t\t.find(\"tbody:first\")\r\n\t\t\t\t.find(\".active\")\r\n\t\t\t\t.removeClass(\"active\");\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * seleciona todos os registros da tabela\r\n\t * @return {DataGrid}\r\n\t*/\r\n\tpublic selectAll():this{\r\n\t\tthis.selectedData = this.getData().map((row,indx)=>indx);\r\n\t\tjquery(this.element)\r\n\t\t\t\t.find(\"tbody:first\")\r\n\t\t\t\t.children(\"tr\") \r\n\t\t\t\t.addClass(\"active\");\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * seleciona os registros da tabela pelo array de indeces passados como parametro\r\n\t * @param {Array} lista de indices para selecionar\r\n\t * @return {DataGrid}\r\n\t*/\r\n\tpublic setSelectedIndexes(indexs:number[]):this{\r\n\t\tthis.clearSelection();\r\n\t\tthis.selectedData = indexs;\r\n\r\n\t\tlet tmpbody = jquery(this.element)\r\n\t\t\t\t.find(\"tbody:first\");\r\n\r\n\t\tthis.selectedData.forEach(indx=>{\r\n\t\t\tjquery(this.element)\r\n\t\t\t\t.find(\"tbody:first\")\r\n\t\t\t\t.children(`tr:eq(${indx})`) \r\n\t\t\t\t.addClass(\"active\");        \r\n\t\t});        \r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * adiciona mais os registros da tabela pelo array de indeces passados como parametro\r\n\t * @param {Array} lista de indices para selecionar\r\n\t * @return {DataGrid}\r\n\t*/\r\n\tpublic addSelectedIndexes(indexs:number[]):this{\r\n\t\tthis.selectedData = this.selectedData.concat(indexs);\r\n\t\tthis.setSelectedIndexes(this.selectedData);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Atribui o valor que indica se a grid permite seleção múltipla ou não.\r\n\t * @param {boolean} yes\r\n\t */\r\n\tpublic setSingleSelection(yes: boolean): this {\r\n\t\tthis.singleSelection = yes;\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * @return {boolean}\r\n\t*/    \r\n\tpublic isSingleSelection(): boolean {\r\n\t\treturn this.singleSelection;\r\n\t}\r\n\t/**\r\n\t * Atribui as colunas que serão exibidas na grid    \r\n\t * @param columns {ITreeGridColumn[]}\r\n\t * @return {DataGrid}\r\n\t */\r\n\tpublic setColumns(columns:IDataGridColumn<T>[]):this{\r\n\t\tthis.columns = columns.map(col=>{\r\n\t\t\tlet tmpcol:IDataGridColumn<T> = col;\r\n\t\t\tlet tmpsize:string = \"col-xs-1\";            \r\n\t\t\tif(col.size && col.size.length){ \r\n\t\t\t\ttmpsize = \"\";\r\n\t\t\t\tcol.size.forEach(view=>{                     \r\n\t\t\t\t\tif(view.display && view.display.length){\r\n\t\t\t\t\t\ttmpsize += \" \";\r\n\t\t\t\t\t\ttmpsize += view\r\n\t\t\t\t\t\t\t\t\t.display\r\n\t\t\t\t\t\t\t\t\t.map(display=>{\r\n\t\t\t\t\t\t\t\t\t\tlet coldisplays:string = `col-${(<any>ABasicComponent.prototype).getSizeDesc.call(null,display)}-${view.size}`;\r\n\t\t\t\t\t\t\t\t\t\treturn coldisplays;\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t.join(\" \");                        \r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\ttmpsize += ` col-xs-${view.size}`;\r\n\t\t\t\t\t}\r\n\t\t\t\t});               \r\n\t\t\t}            \r\n\t\t\ttmpcol[\"_size_\"] = tmpsize;\r\n\t\t\treturn tmpcol;\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * Atribui um height em 'px' para o tbody da grid, este metodo é conflitante com {DataGrid.setBotton}    \r\n\t * @param {number} height\r\n\t * @return {DataGrid}     \r\n\t */\r\n\tpublic setHeight(height: number): this {\r\n\t\tthis.height = height;\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * Retorna o height do tbody da grid    \r\n\t * @return {DataGrid}     \r\n\t */    \r\n\tpublic getHeight() : number {\r\n\t\treturn this.height;\r\n\t}\r\n\t/**\r\n\t * @param {boolean} isInfiniteScroll\r\n\t */\r\n\tpublic setInfiniteScroll(isInfiniteScroll: boolean): this {\r\n\t\tthis.infiniteScroll = isInfiniteScroll;\r\n\t\tif (!this.height) {\r\n\t\t\tthis.height = this.defaultHeight;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * Retorna o true caso a grid esteja com rolagem infinita      \r\n\t * @return {boolean} isInfiniteScroll\r\n\t */    \r\n\tpublic isInfiniteScroll(): boolean {\r\n\t\treturn this.infiniteScroll;\r\n\t}\r\n\t/**\r\n\t * Retorna o texto que será exibido caso a grid não possua dados para listar.\r\n\t */\r\n\tpublic getEmptyText(): string {\r\n\t\treturn this.emptyText;\r\n\t}\r\n\t/**\r\n\t * Limpa os dados exibidos pela grid.\r\n\t * @see DataGrid#data\r\n\t */\r\n\tpublic clear(): this {\r\n\t\tthis.setData([]);\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * Transcreve os valores do estilo da grid de acordo com as classes css que representam cada estilo.\r\n\t * @see {@link DataGrid.styles}\r\n\t */\r\n\tpublic getStyle(): string {\r\n\t\tlet styles: string[] = [];        \r\n\t\tthis.styles.forEach((style: EGridStyle) => {\r\n\t\t\tstyles.push(EGridStyle[style].toLowerCase().replace(\"_\", \"-\"));\r\n\t\t});\r\n\t\tlet hasBorder:boolean = styles.some(style=>style === \"table-bordered\");\r\n\t\tif(!hasBorder){\r\n\t\t\tstyles.push(\"no-bordered\");\r\n\t\t}\r\n\t\treturn styles.join(\" \");\r\n\t}\r\n\r\n\t/**\r\n\t * seleciona um item da datagrid de acordo com o indice informado\r\n\t * @param indice {number}\r\n\t * @return {DataGrid}\r\n\t*/\r\n\tpublic setSelectedIndex(index:number):this{\r\n\t\tif(index > -1 && index < this.data.length-1){\r\n\t\t\tthis.clearSelection();\r\n\t\t\tthis.selectedData = [index];\r\n\t\t\tjquery(this.element)\r\n\t\t\t\t.find(\"tbody:first\")\r\n\t\t\t\t.children(`tr:eq(${index})`) \r\n\t\t\t\t.addClass(\"active\");\r\n\t\t\tthis.onItemSelect.emit(this.data[index]);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Retorna todos os valores representados pelas linhas que estão selecionadas na grid.\r\n\t * @see {@link DataGrid.selectedData}\r\n\t */\r\n\tpublic getSelectedItems() : T[] {\r\n\t\tlet selectedItems: T[] = [];\r\n\t\tthis.selectedData.forEach((index: number)=>{\r\n\t\t\tif (this.data[index] !== undefined) {\r\n\t\t\t\tselectedItems.push(this.data[index]);\r\n\t\t\t}            \r\n\t\t});\r\n\t\treturn selectedItems;\r\n\t}\r\n\r\n\t/**\r\n\t * Retorna os dados que estão sendo exibidos pela grid.\r\n\t * @see {@link DataGrid.setData}\r\n\t */\r\n\tpublic getData(): T[] {\r\n\t\treturn this.data;\r\n\t}\r\n\t/**\r\n\t * Retorna as colunas que estão sendo exibidas pela grid.\r\n\t * @see {@link DataGrid.setColumns}\r\n\t */\r\n\tpublic getColumns(): IDataGridColumn<T>[] {\r\n\t\treturn this.columns;\r\n\t}\r\n\tpublic attached(): void {\r\n\t\tthis.refreshRender();\r\n\t}\r\n\t/**\r\n\t* Configura o height do DataGrid de acordo com a altura do mesmo.\r\n\t* este método conflita com {DataGrid.setHeight} e para que o mesmo funcione adequadamente o container em qual o DataGrid está adicionado deve ter um height definido seja em 'px' ou '%'\r\n\t* @param {number} bottom\r\n\t* @returns {DataGrid}\r\n\t*/\r\n\tpublic setBottom(bottom:number):this{\r\n\t\tthis.bottom = bottom;\r\n\t\treturn this; \r\n\t}\r\n\t/**\r\n\t * marcar como checado um ou varios itens da datagrid de acordo com o indice informado para a coluna marcada como checkable.\r\n\t * @param indice {number[]}\r\n\t * @return {DataGrid}\r\n\t*/\r\n\tpublic setCheckeds(pindexes:number[]):this{\r\n\t\tlet indexes = pindexes.filter(indx => indx > -1);\r\n\t\tlet $grid = this;\r\n\t\tlet tmp_tbody = jquery(this.element).find(\"table:first > tbody:first\");\r\n\t\tlet checkedItens:number[] = [];\r\n\t\ttmp_tbody.find(\"tr > td.is-header-checkable > .is-box-checkbox > input\").each(function (index){\r\n\t\t\tlet itemjq = jquery(this);\r\n\t\t\tlet indexItem = parseInt(itemjq.attr(\"data-index\"));\r\n\t\t\tif(indexes.indexOf(index) >- 1){\r\n\t\t\t\titemjq.prop(\"checked\",\"checked\");\r\n\t\t\t}else{\r\n\t\t\t\titemjq.prop(\"checked\",null);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Retorna todos os valores representados pelas linhas que estão checadas na grid para a coluna que está marcada como checkable.\r\n\t * @see {@link DataGrid.selectedData}\r\n\t */\r\n\tpublic getCheckeds():T[]{       \r\n\r\n\t\tlet selectedItems: T[] = [];\r\n\t\t\tthis.getCheckedsIndexes().forEach((index: number)=>{\r\n\t\t\tif (this.data[index] !== undefined) {\r\n\t\t\t\tselectedItems.push(this.data[index]);\r\n\t\t\t}            \r\n\t\t});\r\n\t\treturn selectedItems;\r\n\t}\r\n\t/**\r\n\t * Retorna um array com o indice de todos os valores checados na grid para a coluna que está marcada como checkable.\r\n\t * @see {@link DataGrid.selectedData}\r\n\t */\r\n\tpublic getCheckedsIndexes() :number[]{\r\n\t\tlet tmp_tbody = jquery(this.element).find(\"table:first > tbody:first\");\r\n\t\tlet checkedItens:number[] = [];\r\n\t\ttmp_tbody.find(\"tr > td.is-header-checkable > .is-box-checkbox > input\").each(function (index){\r\n\t\t\tif(jquery(this).prop(\"checked\")){\r\n\t\t\t\tcheckedItens.push(index);\r\n\t\t\t}            \r\n\t\t});\r\n\t\treturn checkedItens;\r\n\t}\r\n\r\n\tprivate refreshRender(){\r\n\t\tlet $dataGrid = this;\r\n\t\tlet _tmpgrid:JQuery; \r\n\t\tlet _tmptable:JQuery;\r\n\t\tif(!this.gridRendered){\r\n\t\t\tthis.gridRendered = true;\r\n\t\t\t_tmpgrid = jquery(`<div class=\"grid-content\"></div>`);\r\n\t\t\tjquery(this.element).append(_tmpgrid);\r\n\t\t}else{\r\n\t\t\t_tmpgrid = jquery(this.element).find(\".grid-content:first\");\r\n\t\t}\r\n\r\n\t\tif(!this.tableRendered){\r\n\t\t\tthis.tableRendered = true;\r\n\t\t\tlet tbodyStyleName = $dataGrid.height ? `height:${$dataGrid.height}px`:\"\";\r\n\t\t\t_tmptable = jquery(`\r\n\t\t\t\t<table \r\n\t\t\t\t\tclass=\"table ${$dataGrid.getStyle()} DataGrid ${$dataGrid.getInfiniteScrollClass()}\"\r\n\t\t\t\t\t>    \r\n\t\t\t\t\t<tbody \r\n\t\t\t\t\t\tstyle=\"${tbodyStyleName}\"\r\n\t\t\t\t\t></tbody>\r\n\t\t\t\t</table>\r\n\t\t\t`);\r\n\t\t\t_tmpgrid.append(_tmptable);\r\n\r\n\t\t\tlet tmp_tbody = _tmptable.find(\"tbody:first\");\r\n\t\t\ttmp_tbody.on(\"scroll\", function () {\r\n\t\t\t\tlet realHeight = jquery(this)[0].scrollHeight;\r\n\t\t\t\tlet scrollTop = jquery(this).scrollTop();\r\n\t\t\t\tlet tbodyHeight = jquery(this).outerHeight();\r\n\t\t\t\tif ((realHeight - scrollTop)  ===  tbodyHeight) {                    \r\n\t\t\t\t\t$dataGrid.onScrollBottom.emit(null).done(() => jquery(this)[0].scrollTop -= 50);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.on(\"click\",\"tr\", function () {\r\n\t\t\t\tlet tmpElem = jquery(this);\r\n\t\t\t\tlet index = tmpElem.attr(\"data-item-index\");                \r\n\t\t\t\t$dataGrid.selectRow(Number(`${index}`));\r\n\t\t\t})\r\n\t\t\t.on(\"dblclick\",\"tr\",function (){\r\n\t\t\t\tlet tmpElem = jquery(this);\r\n\t\t\t\tlet index = tmpElem.attr(\"data-item-index\");    \r\n\t\t\t\t$dataGrid.selectRow(Number(`${index}`),true);\r\n\t\t\t});\r\n\t\t\tif(this.bottom){\r\n\t\t\t\tlet parent = jquery(this.element).parent();\r\n\t\t\t\tlet prevElement = jquery(this.element).prev();\r\n\t\t\t\tlet top = 0;\r\n\t\t\t\tif(parent.offset()){\r\n\t\t\t\t\ttop = parent.offset().top;\r\n\t\t\t\t}                \r\n\t\t\t\tif(prevElement.length && prevElement.offset()){\r\n\t\t\t\t\ttop = prevElement.offset().top;\r\n\t\t\t\t}            \r\n\t\t\t\tjquery(this.element).css(\"height\",`calc( 100% - ${(this.bottom+top)}px )`);\r\n\t\t\t}\r\n\r\n\t\t\ttmp_tbody.on(\"click\",\"tr > td.is-header-checkable > .is-box-checkbox > input\",function (){                \r\n\t\t\t\tlet indexItem = parseInt(jquery(this).attr(\"data-index\"));\r\n\t\t\t\tif(jquery(this).is(\":checked\")){\r\n\t\t\t\t\t$dataGrid.onItemChecked.emit($dataGrid.data[indexItem]);\r\n\t\t\t\t}else{\r\n\t\t\t\t\t$dataGrid.onItemUnChecked.emit($dataGrid.data[indexItem]);                     \r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t}else{\r\n\t\t\t_tmptable = _tmpgrid.find(\".table:first\");\r\n\t\t}\r\n\r\n\t\tif(!this.gridHeaderRendered && $dataGrid.columns && $dataGrid.columns.length){\r\n\t\t\tthis.gridHeaderRendered = true;\r\n\t\t\tlet _tmptable_heade = jquery(`<thead>\r\n\t\t\t<tr></tr>\r\n\t\t\t</thead>`);\r\n\t\t\tlet tr_head = _tmptable_heade.find(\"tr\");\r\n\t\t\t$dataGrid.columns.forEach((column:IDataGridColumnExtended<T>,$indxhead)=>{\r\n\t\t\t\tif(column.template){\r\n\t\t\t\t\tconsole.warn(`\r\nmv-components: a coluna '${column.name}' está utilizando o método 'DataGrid.column.template' que será descontinuado\r\napartir da versão 1.2.0, por favor utilize o método 'DataGrid.column.renderElement' ou 'DataGrid.column.render' para custumizar a exibição da coluna!\r\n\t\t\t\t\t`);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tlet tmp_th_head:JQuery=null;\r\n\t\t\t\tif(column.checkable){\r\n\t\t\t\t\tlet thStyleName = column._size_ && !column.width ? column._size_:\"\";\r\n\t\t\t\t\tthStyleName += \" \";\r\n\t\t\t\t\tthStyleName += $indxhead === 0 ? \"is-first-cell\":$indxhead === $dataGrid.columns.length-1 ? \"is-last-cell\":\"\";\r\n\t\t\t\t\ttmp_th_head = jquery(`\r\n\t\t\t\t\t\t<th \r\n\t\t\t\t\t\t\tstyle=\"width:${column.width}%\" \r\n\t\t\t\t\t\t\tclass=\"is-header-checkable ${thStyleName}\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div class=\"is-box-checkbox\">\r\n\t\t\t\t\t\t\t\t<input type=\"checkbox\"/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t`);\r\n\t\t\t\t\ttmp_th_head\r\n\t\t\t\t\t\t.find(\"input:first\")\r\n\t\t\t\t\t\t.on(\"click\",function (){\r\n\t\t\t\t\t\t\tlet tmp_tbody = _tmptable.find(\"tbody:first\");\r\n\t\t\t\t\t\t\tlet checked = jquery(this).prop(\"checked\");\r\n\t\t\t\t\t\t\tlet tmp_checkboxs = tmp_tbody.find(\"tr > td.is-header-checkable > .is-box-checkbox > input\");\r\n\t\t\t\t\t\t\tif(checked){\r\n\t\t\t\t\t\t\t\ttmp_checkboxs.prop(\"checked\",\"checked\");\r\n\t\t\t\t\t\t\t\t$dataGrid.onItemCheckeds.emit(true);\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\ttmp_checkboxs.prop(\"checked\",null);\r\n\t\t\t\t\t\t\t\t$dataGrid.onItemCheckeds.emit(false);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\ttr_head.append(tmp_th_head);\r\n\t\t\t\t}else if(column.headerRender){\r\n\t\t\t\t\tlet thStyles = column.width ? `width:${column.width}%`:\"\";\r\n\t\t\t\t\tlet thStyleName = column._size_ && !column.width?column._size_:\"\";\r\n\t\t\t\t\tthStyleName += \" \";\r\n\t\t\t\t\tthStyleName += $indxhead === 0 ? \"is-first-cell\":$indxhead === $dataGrid.columns.length-1 ? \"is-last-cell\":\"\";\r\n\t\t\t\t\ttmp_th_head = jquery(`\r\n\t\t\t\t\t\t<th \r\n\t\t\t\t\t\t\tstyle=\"${thStyles}\" \r\n\t\t\t\t\t\t\tclass=\"${thStyleName}\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t${column.headerRender(column)}\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t`);\r\n\t\t\t\t}else if(column.headerRenderElement){\r\n\t\t\t\t\ttmp_th_head = jquery(\"<th>\");\r\n\t\t\t\t\tlet tmpelement = column.headerRenderElement(column).element;\r\n\r\n\t\t\t\t\ttmp_th_head.append(tmpelement);\r\n\t\t\t\t\ttr_head.append(tmp_th_head);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tlet _title = column.title||column.name;\r\n\t\t\t\t\tlet thStyles = column.width ? `width:${column.width}%`:\"\";\r\n\t\t\t\t\tlet thStyleName = column._size_ && !column.width?column._size_:\"\";\r\n\t\t\t\t\tthStyleName += \" \";\r\n\t\t\t\t\tthStyleName += $indxhead === 0 ?\"is-first-cell\":$indxhead === $dataGrid.columns.length-1 ?\"is-last-cell\":\"\";\r\n\t\t\t\t\ttmp_th_head = jquery(`\r\n\t\t\t\t\t<th \r\n\t\t\t\t\t\tstyle=\"${thStyles}\" \r\n\t\t\t\t\t\tclass=\"${thStyleName}\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t${_title}\r\n\t\t\t\t\t</th>\r\n\t\t\t\t\t`);                    \r\n\t\t\t\t}\r\n\t\t\t\tif(column.sortable){\r\n\t\t\t\t\tlet sortAscStyleName = column.sortingDirection === 0?\"active\":\"\";\r\n\t\t\t\t\tlet sortDescStyleName = column.sortingDirection === 1?\"active\":\"\";\r\n\t\t\t\t\ttmp_th_head.append(`\r\n\t\t\t\t\t\t<span class=\"mv-datagrid-sort\">\r\n\t\t\t\t\t\t\t<div class=\"mv-datagrid-sort-asc ${sortAscStyleName}\" >\r\n\t\t\t\t\t\t\t\t<span class=\"glyphicon glyphicon-triangle-top spin-sort-up\"></span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"mv-datagrid-sort-desc ${sortDescStyleName}\">\r\n\t\t\t\t\t\t\t\t<span class=\"glyphicon glyphicon-triangle-bottom spin-sort-down\"></span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</span>                            \r\n\t\t\t\t\t`);\r\n\t\t\t\t\t\r\n\t\t\t\t\ttmp_th_head\r\n\t\t\t\t\t\t.find(\".mv-datagrid-sort:first\")\r\n\t\t\t\t\t\t.on(\"click\",\".spin-sort-up\",$dataGrid.addSort.bind($dataGrid,$indxhead, true))\r\n\t\t\t\t\t\t.on(\"click\",\".spin-sort-down\",$dataGrid.addSort.bind($dataGrid,$indxhead, false));\r\n\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\ttr_head.append(tmp_th_head);\r\n\t\t\t});\r\n\t\t\t_tmptable.prepend(_tmptable_heade);\r\n\t\t}\r\n\r\n\t\t//so renderiza se as colunas estiverem definidas\r\n\t\tif($dataGrid.columns && $dataGrid.columns.length && $dataGrid.data && $dataGrid.data.length){\r\n\t\t\tlet tmp_tbody = _tmptable.find(\"tbody:first\");\r\n\t\t\ttmp_tbody.html(\"\");\r\n\t\t\tif($dataGrid.height){\r\n\t\t\t\ttmp_tbody.css(\"height\",`${$dataGrid.height}px`);\r\n\t\t\t}\r\n\r\n\t\t\t$dataGrid.data.forEach(($row,$indexRow)=>{\r\n\t\t\t\tlet tmp_row = jquery(`\r\n\t\t\t\t\t<tr data-item-index=\"${$indexRow}\"></tr>\r\n\t\t\t\t`);\r\n\r\n\t\t\t\t$dataGrid.columns.forEach((column:IDataGridColumnExtended<T>,$indexCol)=>{\r\n\r\n\t\t\t\t\tlet tmp_cell:JQuery = null;\r\n\t\t\t\t\tlet style = column.width ? `width:${column.width}%`:\"\";\r\n\t\t\t\t\tif(column.checkable){\r\n\t\t\t\t\t\tlet tdStyleName = column._size_ && !column.width ? column._size_:\"\";\r\n\t\t\t\t\t\ttdStyleName =+ \" \";\r\n\t\t\t\t\t\ttdStyleName =+ $indexCol === 0 ? \"is-first-cell\":$indexCol === $dataGrid.columns.length-1 ? \"is-last-cell\":\"\";\r\n\t\t\t\t\t\ttmp_cell = jquery(`\r\n\t\t\t\t\t\t\t<td style=\"${style}\" class=\"is-header-checkable ${tdStyleName}\">\r\n\t\t\t\t\t\t\t\t<div class=\"is-box-checkbox\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" data-index=\"${$indexRow}\"/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t`);\r\n\t\t\t\t\t}else if(column.template){\r\n\t\t\t\t\t\tlet tdStyleName = column._size_ && !column.width ? column._size_:\"\";\r\n\t\t\t\t\t\ttdStyleName += \" \";\r\n\t\t\t\t\t\ttdStyleName += $indexCol === 0 ? \"is-first-cell\":$indexCol === $dataGrid.columns.length-1 ? \"is-last-cell\":\"\";\r\n\t\t\t\t\t\ttmp_cell = jquery(`<td style=\"${style}\" class=\"${tdStyleName}\"></td>`);\r\n\t\t\t\t\t\t_idom_.patch(tmp_cell[0],column.template,$row);\r\n\t\t\t\t\t}else if(column.render){\r\n\t\t\t\t\t\tlet tdStyleName = column._size_ && !column.width?column._size_:\"\";\r\n\t\t\t\t\t\ttdStyleName += \" \";\r\n\t\t\t\t\t\ttdStyleName += $indexCol === 0 ? \"is-first-cell\":$indexCol === $dataGrid.columns.length-1 ? \"is-last-cell\":\"\";\r\n\t\t\t\t\t\ttmp_cell = jquery(`\r\n\t\t\t\t\t\t<td style=\"${style}\" class=\"${tdStyleName}\">\r\n\t\t\t\t\t\t\t${column.render($row)}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t`);\r\n\t\t\t\t\t}else if(column.renderElement){\r\n\t\t\t\t\t\tlet tdStyleName = column._size_ && !column.width?column._size_:\"\";\r\n\t\t\t\t\t\ttdStyleName += \" \";\r\n\t\t\t\t\t\ttdStyleName += $indexCol === 0 ? \"is-first-cell\":$indexCol === $dataGrid.columns.length-1 ? \"is-last-cell\":\"\";\r\n\t\t\t\t\t\ttmp_cell = jquery(`<td style=\"${style}\" class=\"${tdStyleName}\"></td>`);\r\n\t\t\t\t\t\ttmp_cell.append(column.renderElement($row).element);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tlet tdStyleName = column._size_ && !column.width ? column._size_:\"\";\r\n\t\t\t\t\t\ttdStyleName += \" \";\r\n\t\t\t\t\t\ttdStyleName += $indexCol === 0 ? \"is-first-cell\":$indexCol === $dataGrid.columns.length-1 ? \"is-last-cell\":\"\";\r\n\t\t\t\t\t\ttmp_cell = jquery(`\r\n\t\t\t\t\t\t\t<td style=\"${style}\" class=\"${tdStyleName}\">\r\n\t\t\t\t\t\t\t\t${$dataGrid.getValueByPath($row,column.name)}\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttmp_row.append(tmp_cell);                    \r\n\t\t\t\t});\r\n\t\t\t\ttmp_tbody.append(tmp_row);\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\t//limpando todos os registros antigos\r\n\t\t\tlet tmp_tbody = _tmptable.find(\"tbody:first\");\r\n\t\t\ttmp_tbody.html(\"\");\r\n\t\t}\r\n\t\tif($dataGrid.blocked){\r\n\t\t\tjquery($dataGrid.element)\r\n\t\t\t\t.append(`<div class=\"DataGridBlockContainer\"></div>`);\r\n\t\t}else{\r\n\t\t\tjquery($dataGrid.element)\r\n\t\t\t\t.children(\".DataGridBlockContainer:first\")\r\n\t\t\t\t.remove();\r\n\t\t}\r\n\t\tif($dataGrid.infiniteScroll || $dataGrid.height){\r\n\t\t\tthis.verifyScroll();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate verifyScroll(){\r\n\t\tlet item = jquery(this.element).find(\"table:first\").find(\"tbody\");\r\n\t\tlet hasScroll = item.get(0).scrollHeight > item.height();\r\n\t\t\r\n\t\tlet elementTHead = jquery(this.element).find(\"table:first\").find(\"thead\");\r\n\t\tlet elementTbody = jquery(this.element).find(\"table:first\").find(\"tbody\");\r\n\r\n\t\tif(hasScroll){\r\n\t\t\telementTbody.find(\"tr\").css({\"width\":\"calc( 100% + 18px )\"});\r\n\t\t}else{\r\n\t\t\telementTbody.find(\"tr\").css({\"width\":\"100%\"});\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tprivate getValueByPath(item:any,path:string){\r\n\t\tlet $_this = this;\r\n\t\tlet valueGroup = path.split(\".\").reduce( function ( prev, curr ) {\r\n\t\t\t\t\t\t\t\treturn prev && prev[curr]?prev[curr]:null;\r\n\t\t\t\t\t\t\t}, item || this );\r\n\t\treturn valueGroup;\r\n\t}\r\n\r\n\t/**\r\n\t* Atualiza o DataGrid.\r\n\t* @returns {DataGrid}\r\n\t*/\r\n\tpublic refresh(): this {\r\n\t\tthis.refreshRender();\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * Bloqueia a grid, não permitindo que nenhuma ação do usuário possa ser realizada sobre ela.\r\n\t * @param {boolean} block\r\n\t * @see {@link DataGrid.blocked}\r\n\t */\r\n\tpublic block(block: boolean): this {\r\n\t\tthis.blocked = block;\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * Método interno utilizado para controlar as colunas que foram clicadas para ordenação.\r\n\t * @param {number} index\r\n\t * @param {boolean} asc\r\n\t * @see {@link DataGrid.onSortingChange}\r\n\t */\r\n\tprivate addSort(index: number, asc: boolean): void {\r\n\t\tlet newSortingDirection = (asc) ? EDataGridSortingDirection.ASCENDING : EDataGridSortingDirection.DESCENDING;\r\n\t\tlet shouldRemove: boolean = false;\r\n\t\tif (newSortingDirection === this.columns[index].sortingDirection) {\r\n\t\t\tdelete this.columns[index].sortingDirection;\r\n\t\t\tshouldRemove = true;\r\n\t\t} else {\r\n\t\t\tshouldRemove = false;\r\n\t\t\tthis.columns[index].sortingDirection = newSortingDirection;\r\n\t\t}        \r\n\t\tvar indexOf = jquery.inArray(index, this.sortingColumns);\r\n\t\tif (indexOf === -1) {\r\n\t\t\tthis.sortingColumns[this.sortingColumns.length] = index;            \r\n\t\t} else if (shouldRemove){\r\n\t\t\tthis.sortingColumns.splice(indexOf, 1);\r\n\t\t}\r\n\t\tlet orderedSortingColumns: IDataGridColumn<T>[] = [];\r\n\t\tthis.sortingColumns.forEach((idx: number) => {\r\n\t\t\torderedSortingColumns.push(this.columns[idx]);\r\n\t\t});\r\n\t\t\r\n\t\tif(this.autoSort){\r\n\t\t\tthis.columns[index].sortingDirection = newSortingDirection;\r\n\t\t\tthis.sortingColumns = [index];\r\n\t\t\tlet columnOrder:IDataGridColumn<T> = this.columns[index];\r\n\t\t\tthis.columns\r\n\t\t\t\t.filter(col=>(col.name !== columnOrder.name))\r\n\t\t\t\t.forEach(col=>col.sortingDirection=EDataGridSortingDirection.NONE);            \r\n\r\n\t\t\tthis.onSortingChange.emit([columnOrder]).done(()=>{\r\n\t\t\t\tif(columnOrder.sortingDirection === EDataGridSortingDirection.ASCENDING){\r\n\t\t\t\t\tthis.setData(this.getData().sort((a,b)=>{\r\n\t\t\t\t\t\treturn a[columnOrder.name] >= b[columnOrder.name] ? 1:-1;\r\n\t\t\t\t\t}));\r\n\t\t\t\t}else if(columnOrder.sortingDirection === EDataGridSortingDirection.DESCENDING){\r\n\t\t\t\t\tthis.setData(this.getData().sort((a,b)=>{\r\n\t\t\t\t\t\treturn a[columnOrder.name] <= b[columnOrder.name] ? 1:-1;\r\n\t\t\t\t\t}));\r\n\t\t\t\t}               \r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tthis.onSortingChange.emit(orderedSortingColumns);\r\n\t\t}\r\n\r\n\t\tthis.refresh();\r\n\r\n\t}\r\n\t/**\r\n\t * Método interno utilizado para selecionar a linha que foi clicada. Caso a linha já esteja no conjunto de \r\n\t * {@link DataGrid.selectedData}, será removida do mesmo se a grid tiver o valor da proprieade {@link DataGrid.isSingleSelection} = false.\r\n\t * @see {@link DataGrid.onItemSelect}\r\n\t */\r\n\tprivate selectRow(index: number,isDbClick?:boolean): void {\r\n\t\tisDbClick = isDbClick?isDbClick:false;\r\n\t\tif (this.singleSelection) {\r\n\t\t\tthis.clearSelection();\r\n\t\t}\r\n\r\n\t\tvar indexOf = jquery.inArray(index, this.selectedData);\r\n\t\tif (indexOf === -1) {\r\n\t\t\tthis.selectedData[this.selectedData.length] = index;\r\n\r\n\t\t\tjquery(this.element)\r\n\t\t\t\t.find(\"tbody:first\")\r\n\t\t\t\t.children(`tr:eq(${index})`) \r\n\t\t\t\t.addClass(\"active\");\r\n\r\n\t\t} else {\r\n\t\t\tthis.selectedData.splice(indexOf, 1);\r\n\r\n\t\t\tjquery(this.element)\r\n\t\t\t\t.find(\"tbody:first\")\r\n\t\t\t\t.children(`tr:eq(${index})`) \r\n\t\t\t\t.removeClass(\"active\");\r\n\t\t}\r\n\t\tif(isDbClick){\r\n\t\t\tthis.onDoubleClick.emit(this.data[index]);\r\n\t\t}else{\r\n\t\t\tthis.onItemSelect.emit(this.data[index]);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Retorna a classe css que adiciona o estilo de inifite scroll à grid.\r\n\t */\r\n\tprivate getInfiniteScrollClass(): string {\r\n\t\treturn (this.infiniteScroll||this.height) ? \"DataGrid-InfiniteScroll\" : \"\";\r\n\t}\r\n\r\n}\r\n"]}