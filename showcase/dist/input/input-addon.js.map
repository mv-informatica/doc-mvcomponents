{"version":3,"sources":["../src/input/input-addon.ts"],"names":[],"mappings":";;;IA4BA;QAAgC,sCAAgB;QAE/C;YAAA,YACC,kBAAM,MAAM,CAAC,SAGb;YAFA,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC;iBAClB,QAAQ,CAAC,mBAAmB,CAAC,CAAC;;QACjC,CAAC;QAYM,4BAAO,GAAd,UAAe,IAAY;YAC1B,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,oCAAiC,IAAI,eAAW,CAAC;YAC1E,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAYM,4BAAO,GAAd,UAAe,IAAY;YAC1B,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC;YAC9B,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAYM,gCAAW,GAAlB,UAAmB,QAAiB;YACnC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,QAAQ,GAAG,UAAU,GAAE,aAAa,CAAC,CAAC,sBAAsB,CAAC,CAAC;YAC9G,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAWM,+BAAU,GAAjB;YACC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC9C,CAAC;QACF,iBAAC;IAAD,CAjEA,AAiEC,CAjE+B,qCAAgB,GAiE/C;IAjEY,gCAAU","file":"input-addon.js","sourcesContent":["import {IInputAddon} from \"./interface/i-input-addon\";\r\nimport {AVisualComponent} from \"./../component/abstract/a-visual-component\";\r\nimport jquery = require(\"jquery\");\r\n\r\n/**\r\n * @classdesc Componente utilizado para renderizar input estilizado com icone.\r\n * \r\n * @example \r\n * \r\n * import {InputAddon,TextInput} from \"mvcomponents/input\";\r\n *\r\n * //input no qual será colocado o addon.\r\n * let textInput = new TextInput().append(inputAddon);\r\n * this.append(textInput);\r\n *\r\n * let inputAddon:InputAddon = new InputAddon()\r\n *     .setIcon(\"mv-basico-adicionar\")\r\n *     .setText(\"Texto do input\");\r\n *     .setDisabled(true);\r\n * \r\n * let disabled:boolean = iconPickerInput.isDisabled();//disabled=true;\r\n\r\n * \r\n * @export\r\n * @extends {AVisualComponent}\r\n * @implements {IInputAddon}\r\n * @memberof module:mvcomponents/input\r\n */\r\nexport class InputAddon extends AVisualComponent implements IInputAddon {\r\n\r\n\tconstructor() {\r\n\t\tsuper(\"span\");\r\n\t\tjquery(this.element)\r\n\t\t\t.addClass(\"input-group-addon\");\r\n\t}\r\n\t/**\r\n\t * Alterar o icone do componente InputAddon.\r\n\t * \r\n\t * @example\r\n\t * \r\n\t * let iconPickerInput:IconPickerInput = new IconPickerInput();\r\n\t * iconPickerInput.setIcon(\"mv-basico-adicionar\");\r\n\t * \r\n\t * @param {string} icon Icone do input estilizado\r\n\t * @return {InputAddon}\r\n\t */\r\n\tpublic setIcon(icon: string): this {\r\n\t\tthis.element.innerHTML = `<span class=\"icon1 iconeinput ${icon}\"></span>`;\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * Alterar o texto do componente InputAddon.\r\n\t * \r\n\t * @example\r\n\t * \r\n\t * let iconPickerInput:IconPickerInput = new IconPickerInput();\r\n\t * iconPickerInput.setText(\"Texto do input\");\r\n\t * \r\n\t * @param {string} text Texto do input estilizado.\r\n\t * @return {InputAddon}\r\n\t */\r\n\tpublic setText(text: string): this {\r\n\t\tthis.element.innerHTML = text;\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * Desabilitar o componente InputAddon.\r\n\t * \r\n\t * @example\r\n\t * \r\n\t * let iconPickerInput:IconPickerInput = new IconPickerInput();\r\n\t * iconPickerInput.setDisabled(true);\r\n\t * \r\n\t * @param {boolean} disabled Booleano para idicar se campo está desabilitado.\r\n\t * @return {InputAddon}\r\n\t */\r\n\tpublic setDisabled(disabled: boolean): this {\r\n\t\tjquery(this.element).prop(\"disabled\", disabled)[disabled ? \"addClass\": \"removeClass\"](\"is-disabled disabled\");\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * Retorna se campo está desabilitado.\r\n\t * \r\n\t * @example\r\n\t * \r\n\t * let iconPickerInput:IconPickerInput = new IconPickerInput();\r\n\t * let disabled:boolean = iconPickerInput.isDisabled();\r\n\t * \r\n\t * @return {boolean}\r\n\t */\r\n\tpublic isDisabled(): boolean {\r\n\t\treturn jquery(this.element).prop(\"disabled\");\r\n\t}\r\n}\r\n"]}