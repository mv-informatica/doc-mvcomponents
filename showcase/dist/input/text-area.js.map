{"version":3,"sources":["../src/input/text-area.ts"],"names":[],"mappings":";;;IAmBA;QAA8B,oCAAU;QAEvC;mBACC,kBAAM,IAAI,EAAE,EAAE,CAAC;QAChB,CAAC;QAES,yBAAM,GAAhB;YACC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;iBAClB,QAAQ,CAAC,gCAAgC,CAAC;iBAC1C,IAAI,CAAC,8DACyC,IAAI,CAAC,IAAI,sJAEQ,IAAI,CAAC,IAAI,2CAExE,CAAC,CAAC;YACJ,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAEM,2BAAQ,GAAf;YACC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC9C,CAAC;QAYM,0BAAO,GAAd,UAAe,IAAY;YAC1B,IAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YACnC,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAYM,4BAAS,GAAhB,UAAiB,MAAa;YAC7B,IAAI,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAC,MAAM,CAAC,CAAC;YACrC,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QACF,eAAC;IAAD,CAnDA,AAmDC,CAnD6B,yBAAU,GAmDvC;IAnDY,4BAAQ","file":"text-area.js","sourcesContent":["import {ATextInput} from \"./abstract/a-text-input\";\r\nimport jquery = require(\"jquery\");\r\n\r\n/**\r\n * @classdesc Component para renderizar o TextArea.\r\n * \r\n * @example\r\n * \r\n * import {TextArea} from \"mvcomponents/input\";\r\n * \r\n * let textArea:TextArea = new TextArea()\r\n *     .setRows(5);\r\n * \r\n * this.append(textArea);\r\n * \r\n * @export\r\n * @extends {ATextInput}\r\n * @memberof module:mvcomponents/input\r\n */\r\nexport class TextArea extends ATextInput {\r\n\r\n\tconstructor() {\r\n\t\tsuper(null, \"\");\r\n\t}\r\n\r\n\tprotected render(): this {\r\n\t\tjquery(this.element)\r\n\t\t\t.addClass(\"form-group col-xs-12 col-sm-12\")\r\n\t\t\t.html(`\r\n\t\t\t\t<label class=\"control-label\" for=\"inputIcon_${this._uid}\"></label>\r\n\t\t\t\t<div class=\"col-xs-12 input-group no-addon\">\r\n\t\t\t\t\t<textarea class=\"form-control cposi_1 cposis\" id=\"inputIcon_${this._uid}\"></textarea>\r\n\t\t\t\t</div>\r\n\t\t\t`);\t\t\t\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic getInput(): JQuery {\r\n\t\treturn jquery(this.element).find(\"textarea\");\r\n\t}\r\n\t/**\r\n\t * Altera o numero de linhas que devem ter no TextArea.\r\n\t * \r\n\t * @example\r\n\t * \r\n\t * let textArea:TextArea = new TextArea();\r\n\t * textArea.setRows(10);\r\n\t * \r\n\t * @param {number} rows NÃºmero de linhas.\r\n\t * @return {TextArea}\r\n\t */\r\n\tpublic setRows(rows: number):this{\r\n\t\tthis.getInput().attr(\"rows\", rows);\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * Altera a altura do TextArea.\r\n\t * \r\n\t * @example\r\n\t * \r\n\t * let textArea:TextArea = new TextArea();\r\n\t * textArea.setHeight(\"200px\");\r\n\t * \r\n\t * @param {string} height Altura do TextArea.\r\n\t * @return {TextArea}\r\n\t */   \r\n\tpublic setHeight(height:string):this{\r\n\t\tthis.getInput().css(\"height\",height);\r\n\t\treturn this;\r\n\t}\r\n}\r\n"]}