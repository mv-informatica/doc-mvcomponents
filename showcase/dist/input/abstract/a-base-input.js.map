{"version":3,"sources":["../src/input/abstract/a-base-input.ts"],"names":[],"mappings":"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","file":"a-base-input.js","sourcesContent":["import jquery = require(\"jquery\");\r\nimport {EMouseEvent} from \"../../component/enum/e-mouse-event\";\r\nimport {EKeyboardEvent} from \"../../component/enum/e-keyboard-event\";\r\nimport {EInputEvent} from \"../../component/enum/e-input-event\";\r\nimport {AVisualComponent} from \"../../component/abstract/a-visual-component\";\r\nimport {IInput} from \"../interface/i-input\";\r\nimport {IEvent} from \"../../component/interface/i-event\";\r\nimport {Validator} from '../../core/validator';\r\nimport {Validations} from '../../core/validations';\r\nimport {Validation} from '../../core/validation';\r\nimport {IAsyncValidation, ISyncValidation} from '../../core/interface/i-validation';\r\nimport {IValidator} from '../../core/interface/i-validator';\r\nimport {IConfigurable} from '../../core/interface/i-configurable';\r\n\r\n/**\r\n * @classdesc Classe base para implementação de Inputs\r\n * \r\n * @export\r\n * @abstract\r\n * @extends {AVisualComponent}\r\n * @memberof module:mvcomponents/input\r\n */\r\nexport abstract class ABaseInput<T> extends AVisualComponent implements IInput<T>, IConfigurable {\r\n\tpublic validator: IValidator<T>;\r\n\tprivate dirty: boolean = false;\r\n\tprivate valid: boolean = false;\r\n\tprivate defaultValue: T = null;\r\n\tprivate cleanable:boolean = true;\r\n\tprivate notEmptyValidation:Validation<T>;\r\n\tconstructor(tag: string, content: string = \"\") {\r\n\t\tsuper(tag, content);\r\n\t\tthis.validator = new Validator();\r\n\t\tthis.validator.onValidate.subscribe(errors => this.onValidate(errors));\r\n\t\tthis.addEvent(EInputEvent.CHANGE, () => {\r\n\t\t\tif(this.isDirty()){\r\n\t\t\t\tthis.onValueChange(this.getValue())\r\n\t\t\t}            \r\n\t\t});\r\n\t}\r\n\r\n\tpublic attached(): void {\r\n\t\tthis.getInput().on('blur', () => {\r\n\t\t\tthis.setDirty(true);\r\n\t\t\tthis.validate().then(ok=>{}).catch(err => {\r\n\t\t\t\tthis.markInvalid(true);\r\n\t\t\t});           \r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Método utilizado para configurar propriedades do elemento\r\n\t * \r\n\t * @example \r\n\t *  let input:ABaseInput = ...\r\n\t *  input.configure(me => {\r\n\t *      me.validator.add(Validations.notEmpty())\r\n\t *  });\r\n\t * \r\n\t * @param {Function} method\r\n\t * @returns {this}\r\n\t */\r\n\tpublic configure(method: (scope: this) => any): this {\r\n\t\tmethod(this);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Método que será executado após a execução de qualquer validação \r\n\t * \r\n\t * @protected\r\n\t * @param {string[]} errors Lista de erros encontrados durante o processo de valiação\r\n\t */\r\n\tprotected onValidate(errors: string[]) {\r\n\t\tlet isValid = this.valid = errors.length === 0;\r\n\t\tthis.markInvalid(!isValid);\r\n\t}\r\n\r\n\t/**\r\n\t * Método utilizado para adicionar validações\r\n\t * \r\n\t * @example \r\n\t *  import {Validation} from \"mvcomponents/core\";\r\n\t *\r\n\t *  let input:TextInput = ... \r\n\t *  input.addValidation(new Validation().setMethod(vl => {\r\n\t *     return vl == '123456'\r\n\t *  });\r\n\t *  ...\r\n\t *  input.validate()\r\n\t * \r\n\t * @param {Validation} validation\r\n\t * @returns {this}\r\n\t */\r\n\tpublic addValidation(...validations: ISyncValidation<T>[]):this{\r\n\t\tthis.validator.add(...validations);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Método utilizado para adicionar validações\r\n\t * \r\n\t * @example \r\n\t *  import {Validation} from \"mvcomponents/core\";\r\n\t *\r\n\t *  let input:TextInput = ... \r\n\t *  input.addValidation(new Validation().setMethod(vl => {\r\n\t *     return vl == '123456'\r\n\t *  });\r\n\t *  ...\r\n\t *  input.validate()\r\n\t * \r\n\t * @param {Validation} validation\r\n\t * @returns {this}\r\n\t */\r\n\tpublic removeValidation(...validations: ISyncValidation<T>[]):this{\r\n\t\tthis.validator.remove(...validations);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic addAsyncValidation(...validations: IAsyncValidation<T>[]):this{\r\n\t\tthis.validator.addAsync(...validations);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Método que será executado quando o valor do campo for modificado\r\n\t * \r\n\t * @protected\r\n\t * @param {T} value\r\n\t */\r\n\tprotected onValueChange(value: T) {\r\n\t\t//this.valid = false;\r\n\t\tthis.validator.validate(value);\r\n\t}\r\n\r\n\tpublic markInvalid(invalid: boolean):this {\r\n\t\tjquery(this.element)[invalid ? 'addClass' : 'removeClass']('is-invalid has-error');\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Retorna `true` se houver qualquer interação do usuário com o campo. Como, por exemplo, o focus. \r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isDirty(): boolean {\r\n\t\treturn this.dirty;\r\n\t}\r\n\r\n\t/**\r\n\t * Informa se houve interação do usuário com o input\r\n\t * \r\n\t * @param {boolean} dirty \r\n\t * @returns {this}\r\n\t */\r\n\tpublic setDirty(dirty: boolean): this {\r\n\t\tthis.dirty = dirty;\r\n\t\t//this.markInvalid(!this.isValid());\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Emite um evento oriundo da interface\r\n\t * \r\n\t * @param {(EMouseEvent | EKeyboardEvent | EInputEvent)} type\r\n\t * @param {...any[]} params\r\n\t * @returns {IEvent}\r\n\t */\r\n\tpublic fireEvent(type: EMouseEvent | EKeyboardEvent | EInputEvent, ...params: any[]): IEvent {\r\n\t\treturn super.fireEvent(<any>type, params);\r\n\t}\r\n\r\n\t/**\r\n\t * Registra um novo ouvinte à classe\r\n\t * \r\n\t * @param {(EMouseEvent | EKeyboardEvent | EInputEvent)} type\r\n\t * @param {Function} event_fn\r\n\t */\r\n\tpublic addEvent(type: EMouseEvent | EKeyboardEvent | EInputEvent, event_fn: (eventObject?: JQueryEventObject) => any): void {\r\n\t\tsuper.addEvent(<any>type, event_fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove o ouvinte da classe\r\n\t * \r\n\t * @param {(EMouseEvent | EKeyboardEvent | EInputEvent)} type\r\n\t * @param {Function} [callback]\r\n\t */\r\n\tpublic removeEvent(type: EMouseEvent | EKeyboardEvent | EInputEvent, callback?: (eventObject?: JQueryEventObject) => any): void {\r\n\t\tsuper.removeEvent(<any>type, callback);\r\n\t}\r\n\r\n\t/**\r\n\t * Obtém uma referência ao input do componente\r\n\t * \r\n\t * @protected\r\n\t * @returns {JQuery}\r\n\t */\r\n\tprotected abstract getInput(): JQuery;\r\n\r\n\t/**\r\n\t * Obtém o foco do navegador sobre o input\r\n\t * \r\n\t * @returns {this}\r\n\t */\r\n\tpublic focus(): this {\r\n\t\tthis.getInput().focus();\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Informa qual o label do componente\r\n\t * \r\n\t * @param {string} label\r\n\t * @returns {this}\r\n\t */\r\n\tpublic setLabel(label: string): this {\r\n\t\tjquery(this.element).find(\"label:first\").show().text(label);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Informa o label do componente\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tpublic getLabel(): string {\r\n\t\treturn jquery(this.element).find(\"label:first\").text();\r\n\t}\r\n\r\n\t/**\r\n\t * Informa que o campo não deve ser editável \r\n\t * \r\n\t * @param {boolean} on\r\n\t * @returns {this}\r\n\t */\r\n\tpublic setReadonly(on: boolean): this {\r\n\t\tthis.getInput().prop(\"readonly\", on);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Retorna `true` quando o usuário não pode mudar o valor do componente\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isReadonly(): boolean {\r\n\t\treturn this.getInput().prop(\"readonly\");\r\n\t}\r\n\r\n\t/**\r\n\t * Obtém o valor atual do componente. \r\n\t * O método `setBlankWhenNull` pode fazer com que a resposta varie   \r\n\t * \r\n\t * @returns {T}\r\n\t */\r\n\tabstract getValue(): T;\r\n\r\n\t/**\r\n\t * Caso seja informado `true` o campo irá assumir 'null' como valor quando\r\n\t * `form.clear()` for executado. \r\n\t * \r\n\t * @param {boolean} on\r\n\t * @returns {this}\r\n\t */\r\n\tpublic setCleanable(on: boolean): this {\r\n\t\tthis.cleanable = on;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Retorna `true` caso o campo esteja marcado como cleanable \r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCleanable(): boolean {\r\n\t\treturn this.cleanable;\r\n\t}\r\n\r\n\t/**\r\n\t * Atualiza o valor atual do componente\r\n\t * \r\n\t * @param {T} value\r\n\t * @returns {this}\r\n\t */\r\n\tabstract setValue(value: T): this;\r\n\r\n\tpublic isDisabled(): boolean {\r\n\t\treturn this.getInput().prop('disabled');\r\n\t}\r\n\r\n\tpublic setDisabled(disabled: boolean): this {\r\n\t\tthis.getInput().prop('disabled', disabled).css({\r\n\t\t\t\"backgroundColor\":(disabled?\"#eee\":\"#fff\")\r\n\t\t});\r\n\t\tthis.setCssProperties({\r\n\t\t\t\"opacity\":(disabled?0.5:1)\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic setEnable(enable: boolean): this {\r\n\t\tthis.setDisabled(!enable);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Retorna `true` quando o componente está valido\r\n\t * \r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isValid(): boolean {\r\n\t\treturn this.valid;\r\n\t}\r\n\r\n\t/**\r\n\t * Informa o nome do input\r\n\t * \r\n\t * @param {string} name\r\n\t * @returns {this}\r\n\t */\r\n\tpublic setName(name: string): this {\r\n\t\tthis.getInput().attr(\"name\", name);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Obtém o nome do input\r\n\t * \r\n\t * @returns {string}\r\n\t */\r\n\tpublic getName(): string {\r\n\t\treturn this.getInput().attr(\"name\");\r\n\t}\r\n\r\n\t/**\r\n\t * Força o processo de validação do componente \r\n\t * \r\n\t * @returns {Promise<string[]>}\r\n\t */\r\n\tpublic validate(): Promise<string[]> {\r\n\t\tlet value = this.getValue();\r\n\t\tif(!value && (<any>this).labelAll){\r\n\t\t\tvalue = (<any>this).labelAll;\r\n\t\t}\r\n\t\treturn this.validator.validate(value);\r\n\t}\r\n\r\n\tpublic setDefaultValue(value: T): this {\r\n\t\tthis.defaultValue = value;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic getDefaultValue(): T {\r\n\t\treturn this.defaultValue;\r\n\t}\r\n\r\n\tpublic reset(): this {\r\n\t\tthis.setValue(this.defaultValue);\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * Marca/desmarca o campo como requerido (apenas efeito visual). \r\n\t * @param required {boolean}\r\n\t * @return {boolean}\r\n\t */\r\n\tpublic markRequired(required:boolean):this{\r\n\t\tjquery(this.element).find(\"label:first > span.is-required-text\").remove();\r\n\t\tthis.removeStyleName(\"is-required is-not-empty\");\r\n\t\t if (required){\r\n\t\t\tjquery(this.element).find(\"label:first\").append('<span class=\"is-required-text\"> * </span>');\r\n\t\t\tthis.addStyleName(\"is-required is-not-empty\");                     \r\n\t\t}\r\n\t\treturn this;        \r\n\t}\r\n\t/**\r\n\t * Marca o campo como requerido e adicionada validação de notEmpty para o campo. \r\n\t * @param required {boolean}\r\n\t * @return {RadioGroup}\r\n\t */    \r\n\tpublic setRequired(required:boolean):this{\r\n\t\tif (this.notEmptyValidation) {\r\n\t\t\tthis.removeValidation(this.notEmptyValidation);\r\n\t\t}\r\n\r\n\t\tthis.notEmptyValidation = new Validation();\r\n\t\tthis.notEmptyValidation\r\n\t\t\t\t.setMethod(function(vl) {\r\n\t\t\t\t\treturn Validations.notEmpty().validate(vl);\r\n\t\t\t\t})\r\n\t\t\t\t.setMessage(Validations.notEmpty().getMessage(\"\"));\r\n\r\n\t\tif(this.getLabel && this.getLabel()){\r\n\t\t\tthis.notEmptyValidation\r\n\t\t\t\t.setMessage(`O campo '${this.getLabel()}' é obrigatório`);\r\n\t\t}else if(this.getName && this.getName()){\r\n\t\t\tthis.notEmptyValidation\r\n\t\t\t\t.setMessage(`O campo '${this.getName()}' é obrigatório`);\r\n\t\t}\r\n\r\n\r\n\t\tjquery(this.element).find(\"label:first > span.is-required-text\").remove();\r\n\t\tthis.removeStyleName(\"is-required is-not-empty\");\r\n\t\tthis.markInvalid(false);\r\n\r\n\t\tif (required) {\r\n\t\t\tjquery(this.element).find(\"label:first\").append('<span class=\"is-required-text\"> * </span>');\r\n\t\t\tthis.addStyleName(\"is-required is-not-empty\");\r\n\t\t\tthis.addValidation(this.notEmptyValidation);               \r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * Verifica se o campo foi marcado como requerido. \r\n\t * @return {boolean}\r\n\t */ \r\n\tpublic getRequired():boolean{\r\n\t\treturn this.hasStyleName(\"is-required\");\r\n\t}\r\n}\r\n"]}