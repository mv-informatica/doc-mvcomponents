{"version":3,"sources":["../src/i18n/i18n.ts"],"names":[],"mappings":";;;IAuBA;QAGC;YACC,IAAI,CAAC,QAAQ,GAAG;gBACf,GAAG,EAAE,MAAM,CAAC,SAAS,CAAC,QAAQ,IAAU,MAAM,CAAC,SAAU,CAAC,YAAY,IAAI,IAAI;gBAC9E,OAAO,EAAC,qBAAqB;aAC7B,CAAC;YACF,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QAChB,CAAC;QAMD,sBAAW,2BAAG;iBAAd;gBACC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;YAC1B,CAAC;;;WAAA;QAMM,8BAAS,GAAhB,UAAiB,MAAmB;YACnC,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;YACpD,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;YAChE,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QASM,wBAAG,GAAV,UAAW,GAAW,EAAE,UAAkB,EAAC,OAAoB;YAAvC,2BAAA,EAAA,iBAAkB;YACzC,IAAI,aAAa,GAAU,GAAG,CAAC;YAC/B,EAAE,CAAA,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA,CAAC;gBAEzB,aAAa,GAAG,QAAQ,CAAC,SAAS,EAAC,yBAAuB,GAAK,CAAC,CAAC,IAAI,CAAC,CAAC;YACxE,CAAC;YAAA,IAAI,CAAC,EAAE,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA,CAAC;gBACxB,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAChC,CAAC;YACD,EAAE,CAAA,CAAC,UAAU,CAAC,CAAA,CAAC;gBACd,GAAG,CAAA,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,CAAA,CAAC;oBACxB,aAAa,GAAG,aAAa,CAAC,OAAO,CAAC,OAAK,CAAC,OAAI,EAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjE,CAAC;YACF,CAAC;YACD,MAAM,CAAC,aAAa,CAAC;QACtB,CAAC;QAQM,iCAAY,GAAnB,UAAoB,GAAW,EAAE,MAA8B;YAA/D,iBAgBC;YAhBgC,uBAAA,EAAA,WAA8B;YAC9D,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;YACzD,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;YAC7C,IAAI,OAAO,GAAU,GAAG,GAAC,MAAM;iBACvB,OAAO;iBACP,OAAO,CAAC,SAAS,EAAC,MAAM,CAAC,GAAG,CAAC;iBAC7B,OAAO,CAAC,QAAQ,EAAC,aAAa,CAAC,CAAC;YAExC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC;iBAClB,IAAI,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;iBACvB,IAAI,CAAC,UAAA,GAAG;gBACR,GAAG,CAAA,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAA,CAAC;oBACjB,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;gBACvB,CAAC;gBACD,MAAM,CAAC,GAAG,CAAC;YACZ,CAAC,CAAC,CAAC;QACN,CAAC;QACF,iBAAC;IAAD,CA3EA,AA2EC,IAAA;IA3EY,gCAAU;IA6EZ,QAAA,IAAI,GAAe,IAAI,UAAU,EAAE,CAAC","file":"i18n.js","sourcesContent":["export interface I18nOptions{\r\n\tlng?:string;\r\n\treplace?:{};\r\n\tbackend?: any;\r\n}\r\n\r\nexport interface I18nOptionsConfig{\r\n\tlng?:string;\r\n\tbackend?: any;\r\n}\r\n\r\n/**\r\n * classe i18n\r\n * @example\r\n * import {i18n} from \"mvcomponents/i18n\";\r\n * i18n.loadResource(\"assets/locales/\").then(()=>{\r\n *  console.log(i18n.key(\"msg1\"));\r\n * });\r\n * \r\n * \r\n * @class i18n\r\n * @memberof module:mvcomponents/i18n\r\n */\r\nexport class I18nStatic {\r\n\tprivate defaults: I18nOptionsConfig;\r\n\tprivate keys:{};\r\n\tconstructor() {\r\n\t\tthis.defaults = {\r\n\t\t\tlng: window.navigator.language || (<any>window.navigator).userLanguage || \"pt\",\r\n\t\t\tbackend:\"{{lng}}/{{ns}}.json\"\r\n\t\t};\r\n\t\tthis.keys = {};\r\n\t}\r\n\t/**\r\n\t * Obtém o valor da lingua definida\r\n\t * \r\n\t * @returns {string}\r\n\t */    \r\n\tpublic get lng():string{\r\n\t\treturn this.defaults.lng;\r\n\t}\r\n\t/**\r\n\t * Configura a lingua padrão e o caminho para o carregamento dos dados\r\n\t * @param {{}} [config]\r\n\t * @returns {i18n}\r\n\t */    \r\n\tpublic setConfig(config: I18nOptions): this {\r\n\t\tthis.defaults.lng = config.lng || this.defaults.lng;\r\n\t\tthis.defaults.backend = config.backend || this.defaults.backend;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Obtém o valor de uma chave, caso não exista o valor a própria chave é retornada \r\n\t * \r\n\t * @param {string} key\r\n\t * @param {{}} [objReplace]\r\n\t * @returns {string}\r\n\t */\r\n\tpublic key(key: string, objReplace:{}=null,configs?:I18nOptions): string {\r\n\t\tlet keytranslated:string = key;\r\n\t\tif(key.indexOf(\".\") > -1){\r\n\t\t\t//eval(`keytranslated = this.keys.${key}`);\r\n\t\t\tkeytranslated = Function(\"context\",`return context.keys.${key}`)(this);\r\n\t\t}else if(this.keys[key]){\r\n\t\t\tkeytranslated = this.keys[key];\r\n\t\t}\r\n\t\tif(objReplace){\r\n\t\t\tfor(let k in objReplace){\r\n\t\t\t\tkeytranslated = keytranslated.replace(`{{${k}}}`,objReplace[k]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn keytranslated;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Carrega um resource de acordo com o caminho especificado\r\n\t * \r\n\t * @param url {string} caminho do resource\r\n\t * @returns {Promise}\r\n\t */\r\n\tpublic loadResource(url: string, config: I18nOptionsConfig = {}): Promise<any> {\r\n\t\tconfig.backend = config.backend || this.defaults.backend;\r\n\t\tconfig.lng = config.lng || this.defaults.lng;\r\n\t\tlet urlload:string = url+config\r\n\t\t\t\t\t\t\t\t\t.backend\r\n\t\t\t\t\t\t\t\t\t.replace(\"{{lng}}\",config.lng)\r\n\t\t\t\t\t\t\t\t\t.replace(\"{{ns}}\",\"translation\");\r\n\r\n\t\treturn fetch(urlload)\r\n\t\t\t\t.then(res => res.json())\r\n\t\t\t\t.then(res => {\r\n\t\t\t\t\tfor(let k in res){\r\n\t\t\t\t\t\tthis.keys[k] = res[k];\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn res;\r\n\t\t\t\t});\r\n\t}\r\n}\r\n\r\nexport var i18n: I18nStatic = new I18nStatic();\r\n"]}