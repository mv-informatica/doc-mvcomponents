{"version":3,"sources":["../src/button/icon-button.ts"],"names":[],"mappings":";;;IAsBA;QAAgC,sCAAM;QACrC;YAAA,YACC,iBAAO,SAEP;YADA,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,qCAAqC,CAAC,CAAC;;QACtE,CAAC;QAaM,4BAAO,GAAd,UAAe,IAAY;YAC1B,iBAAM,QAAQ,YAAC,EAAE,CAAC,CAAC;YACnB,MAAM,CAAO,iBAAM,OAAO,YAAC,IAAI,CAAC,CAAC;QAClC,CAAC;QAaM,6BAAQ,GAAf,UAAgB,KAAa;YAC5B,iBAAM,OAAO,YAAC,EAAE,CAAC,CAAC;YAClB,MAAM,CAAO,iBAAM,QAAQ,YAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACjD,CAAC;QACF,iBAAC;IAAD,CArCA,AAqCC,CArC+B,eAAM,GAqCrC;IArCY,gCAAU","file":"icon-button.js","sourcesContent":["import jquery = require(\"jquery\");\r\nimport {Button} from \"./button\";\r\n/**\r\n * <img src=\"../../doc_assets/iconbutton_example_1.png\" />\r\n *\r\n * @example\r\n *  \r\n * import {IconButton} from \"mvcomponents/button\";\r\n * import {EBasicColorStatus} from \"mvcomponents/component\";\r\n * \r\n * let iconButton:IconButton = new IconButton()\r\n *     .setIcon(\"mv-basico-adicionar\")\r\n *\t   .setColor(EBasicColorStatus.DANGER)\r\n *\t   .setLabel(\"Modificar Label\")\r\n *\t   .setTooltip(\"Tooltip do Button\");\r\n * \r\n * this.append(iconButton);\r\n * \r\n * @export\r\n * @extends {Button}\r\n * @memberof module:mvcomponents/button\r\n */\r\nexport class IconButton extends Button {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tjquery(this.element).addClass(\"btn-icon IconButton ButtonComponent\");\r\n\t}\r\n\t/**\r\n\t * Atribui ou substitui o ícone.\r\n\t * \r\n\t * @example\r\n\t * \r\n\t * let iconButton:IconButton = new IconButton()\r\n\t *     .setIcon(\"mv-basico-confirmar\");\r\n\t * \r\n\t * @param icon {string} Icone que será exibido. Ex.: \"mv-basico-adicionar\"\r\n\t * @return {IconButton}\r\n\t * \r\n\t */\r\n\tpublic setIcon(icon: string): this {\r\n\t\tsuper.setLabel(\"\");\r\n\t\treturn <this>super.setIcon(icon);\r\n\t}\r\n\t/**\r\n\t * Atribui ou substitui o rótulo\r\n\t * \r\n\t * @example\r\n\t * \r\n\t * let iconButton:IconButton = new IconButton()\r\n\t *     .setLabel(\"@\");\r\n\t * \r\n\t * @param label {string} Texto que deve substituir a label do IconButton.(Utiliza somente o 1º caractere do texto.)\r\n\t * @return {IconButton}\r\n\t * \r\n\t */\r\n\tpublic setLabel(label: string): this {\r\n\t\tsuper.setIcon(\"\");\r\n\t\treturn <this>super.setLabel(label.substr(0, 1));\r\n\t}   \r\n}\r\n"]}