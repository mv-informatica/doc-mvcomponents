{"version":3,"sources":["../src/http/request.ts"],"names":[],"mappings":";;;IAUA;QAGC,yBAAY,MAAyB;YACpC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACtB,CAAC;QASM,gCAAM,GAAb,UAAc,MAAU,EAAE,WAA4B;YAA5B,4BAAA,EAAA,mBAA4B;YACrD,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;YACpB,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC;YACtC,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAkBM,gCAAM,GAAb,UAAc,IAAQ;YACrB,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,EAAE,CAAC;YAChD,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;YAC/D,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QASM,8BAAI,GAAX,UAAY,OAGH,EAAE,OAAsE;YAHjF,iBAYC;YARA,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,GAAM,IAAI,CAAC,MAAM,CAAC,GAAG,SAAI,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW,CAAG,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;YAC3H,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;gBAClC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAC,IAAQ,EAAC,UAAiB,EAAC,WAAe;oBACxE,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,KAAI,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC,CAAC;gBAClD,CAAC,EAAE,UAAA,GAAG;oBACL,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,GAAG,EAAE,KAAI,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC;gBACnD,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;QACJ,CAAC;QACF,sBAAC;IAAD,CA9DA,AA8DC,IAAA;IA9DY,0CAAe;IAkE5B;QAAgC,mCAAkB;QAAlD;;QAmBA,CAAC;QAfO,sBAAI,GAAX,UAAY,IAAQ;YACnB,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;YACxB,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAGM,sBAAI,GAAX,UAAY,OAGH,EAAE,OAA0E;YACpF,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC;gBACjC,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACrD,CAAC;YACD,MAAM,CAAC,iBAAM,IAAI,YAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QACrC,CAAC;QACF,cAAC;IAAD,CAnBA,AAmBC,CAnB+B,eAAe,GAmB9C;IAnBY,0BAAO;IAuBpB;QAA0C,6CAAU;QAApD;;QA6CA,CAAC;QA1CO,gCAAI,GAAX,UAAY,IAAQ;YACnB,IAAI,IAAI,GAAG,IAAI,QAAQ,EAAE,CAAC;YAE1B,kBAAmB,IAAS;gBAC3B,MAAM,CAAC,CAAE,OAAO,IAAI,KAAK,QAAQ,IAAI,CAAC,CAAC,IAAI,YAAY,IAAI,CAAC,CAAE,CAAC;YAChE,CAAC;YAED,gBAAiB,IAAS;gBACzB,EAAE,CAAC,CAAE,CAAC,QAAQ,CAAC,IAAI,CAAE,CAAC,CAAC,CAAC;oBACvB,MAAM,CAAC,IAAI,CAAC;gBACb,CAAC;gBAED,IAAI,IAAI,GAAG,EAAE,CAAC;gBACd,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;oBACtB,EAAE,CAAC,CAAE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAE,CAAC,CAAC,CAAC;wBAChC,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;wBACtB,EAAE,CAAC,CAAE,QAAQ,CAAC,KAAK,CAAE,CAAC,CAAC,CAAC;4BACvB,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;4BACtB,GAAG,CAAA,CAAE,IAAI,CAAC,IAAI,KAAM,CAAC,CAAC,CAAC;gCACtB,EAAE,CAAC,CAAE,KAAK,CAAC,cAAc,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC;oCAC/B,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;oCACjB,IAAI,CAAI,GAAG,SAAI,CAAG,CAAC,GAAG,CAAC,CAAC;gCACzB,CAAC;4BACF,CAAC;wBACF,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACP,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;wBACnB,CAAC;oBACF,CAAC;gBACF,CAAC;gBACD,MAAM,CAAC,IAAI,CAAC;YACb,CAAC;YAED,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YACpB,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;gBACtB,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBAC9B,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC7B,CAAC;YACF,CAAC;YAED,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;YACxB,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QACF,wBAAC;IAAD,CA7CA,AA6CC,CA7CyC,OAAO,GA6ChD;IA7CY,8CAAiB","file":"request.js","sourcesContent":["import \"es6-shim\";\r\nimport jquery = require(\"jquery\");\r\nimport {IRequestConfig} from \"./interface/i-request-config\";\r\nimport {IErrorResponse} from \"./interface/i-error-response\";\r\n\r\n/**\r\n * Configura e executa uma requisição ajax simples. Utilizada pela classe {@link HttpStatic}\r\n * \r\n * @memberof module:mvcomponents/http\r\n */\r\nexport class SimplestRequest<T> {\r\n\tprivate param: {};\r\n\tprotected config: JQueryAjaxSettings;\r\n\tconstructor(config:JQueryAjaxSettings) {\r\n\t\tthis.config = config;\r\n\t}\r\n\r\n\t/**\r\n\t * Informa os parâmetros que serão enviados na url\r\n\t * \r\n\t * @param {Object} params\r\n\t * @param {boolean} [traditional=false] Caso seja `true` a serialização será feita de forma tradicional\r\n\t * @returns {this}\r\n\t */\r\n\tpublic params(params: {}, traditional: boolean = false): this {\r\n\t\tthis.param = params;\r\n\t\tthis.config.traditional = traditional;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Informa os headers que serão enviados na url\r\n\t * \r\n\t * @example \r\n\t *  $http.get(\"an/url\")\r\n\t *      .header(\"Athorization\", \"Basic ASLKDj123la918273a\")\r\n\t *      .header({\r\n\t *          \"An-Header\": \"Header\",\r\n\t *          \"Another-Header\": \"Header value\"\r\n\t *      })\r\n\t *      .then(data => console.log(data))\r\n\t * \r\n\t * @param {(string | {})} field\r\n\t * @param {string} [value]\r\n\t * @returns {this}\r\n\t */\r\n\tpublic header(prop: {}): this {\r\n\t\tthis.config.headers = this.config.headers || {};\r\n\t\tthis.config.headers = Object.assign(this.config.headers, prop);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Executa a requisição ajax, com os devidos callbacks\r\n\t * \r\n\t * @param {Function} success\r\n\t * @param {Function} [failure]\r\n\t * @returns {Promise<any>}\r\n\t */\r\n\tpublic then(success: (data: T, config?:IRequestConfig, responseHeaders?:{\r\n\t\tgetResponseHeader:(key:string) => string\r\n\t\t,getAllResponseHeaders:() => string\r\n\t}) => any, failure?: (response?: IErrorResponse, request?: IRequestConfig) => any): Promise<any> {\r\n\t\tthis.config.url = this.param ? `${this.config.url}?${jquery.param(this.param, this.config.traditional)}` : this.config.url;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tjquery.ajax(this.config).then((data:any,respStatus:string,respHeaders:any) => {\r\n\t\t\t\tresolve(success(data, this.config, respHeaders));\r\n\t\t\t}, err => {\r\n\t\t\t\treject(failure ? failure(err, this.config) : err);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n/**\r\n * @memberof module:mvcomponents/http\r\n */\r\nexport class Request<T> extends SimplestRequest<T> {\r\n\t/**\r\n\t * Infoma o corpo do request\r\n\t */\r\n\tpublic body(data: {}): this {\r\n\t\tthis.config.data = data;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t//@Override\r\n\tpublic then(success: (data: T, config?:IRequestConfig, responseHeaders?:{\r\n\t\tgetResponseHeader:(key:string) => string\r\n\t\t,getAllResponseHeaders:() => string\r\n\t}) => any, failure?: (response?: IErrorResponse, request?: JQueryAjaxSettings) => any): Promise<T> {\r\n\t\tif (this.config.type === \"json\") {\r\n\t\t\tthis.config.data = JSON.stringify(this.config.data);\r\n\t\t}\r\n\t\treturn super.then(success, failure);\r\n\t}\r\n}\r\n/**\r\n * @memberof module:mvcomponents/http\r\n */\r\nexport class FileUploadRequest<T> extends Request<T> {\r\n\r\n\t//@Override\r\n\tpublic body(data: {}): this {\r\n\t\tvar temp = new FormData();\r\n\r\n\t\tfunction isObject (data: any) {\r\n\t\t\treturn ( typeof data === \"object\" && !(data instanceof File) );\r\n\t\t}\r\n\r\n\t\tfunction encode (data: any) {\r\n\t\t\tif ( !isObject(data) ) {\r\n\t\t\t\treturn data;\r\n\t\t\t}\r\n\r\n\t\t\tlet temp = {};\r\n\t\t\tfor (var key in data) {\r\n\t\t\t\tif ( data.hasOwnProperty(key) ) {\r\n\t\t\t\t\tlet value = data[key];\r\n\t\t\t\t\tif ( isObject(value) ) {\r\n\t\t\t\t\t\tvalue = encode(value);\r\n\t\t\t\t\t\tfor( var k in value ) {\r\n\t\t\t\t\t\t\tif ( value.hasOwnProperty(k) ) {\r\n\t\t\t\t\t\t\t\tlet v = value[k];\r\n\t\t\t\t\t\t\t\ttemp[`${key}.${k}`] = v;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttemp[key] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn temp;\r\n\t\t}\r\n\r\n\t\tdata = encode(data);\r\n\t\tfor (var key in data) {\r\n\t\t\tif (data.hasOwnProperty(key)) {\r\n\t\t\t\ttemp.append(key, data[key]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.config.data = temp;\r\n\t\treturn this;\r\n\t}\r\n}\r\n"]}