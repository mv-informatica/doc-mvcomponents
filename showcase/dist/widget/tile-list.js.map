{"version":3,"sources":["../src/widget/tile-list.ts"],"names":[],"mappings":"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","file":"tile-list.js","sourcesContent":["import {SystemApplication} from \"../core/system-application\";\r\nimport {EventEmitter} from \"../core/event-emitter\";\r\nimport {AWidget} from \"./abstract/a-widget\";\r\nimport jquery = require(\"jquery\");\r\nimport _idom_ = require(\"incremental-dom\");\r\n\r\nexport interface IParamTileList{\r\n\t[key:string]:string|boolean|number|Date;\r\n}\r\n\r\ndeclare var require:any;\r\n\r\n/**\r\n * <img width=\"100%\" src=\"../../doc_assets/list_view_exemple.png\">\r\n * \r\n * @example\r\n *  let mainList:TileList = new TileList({urlTemplate:\"template/users.template.html\"});\r\n *\tmainList.setData([{id:1,user:\"teste 1\"},{id:2,user:\"teste 2\"},{id:3,user:\"teste 2\"}]);\r\n * //conteudo do arquivo \"template/users.template.html\"\r\n * <template name=\"tileListShowCase\" args=\"$rows\">\r\n * \t<div class=\"list-group\">\r\n * \t\t<a each=\"$row in $rows\" href=\"#\" class=\"list-group-item tilecell\" data-indx=\"{$item}\">\r\n * \t\t\t<span class=\"{$row.icon}\" aria-hidden=\"true\"></span>\r\n * \t\t\t<span>\r\n * \t\t\t\t<h4 class=\"list-group-item-heading\">{$row.id}-{$row.name}</h4>\r\n * \t\t\t\t<p class=\"list-group-item-text\">description:{$row.desc}</p>\t\t\t\t\r\n * \t\t\t</span>\r\n * \t\t</a>\r\n * \t</div>\r\n * </template>\r\n *\r\n *\r\n * @export\r\n * @extends {AWidget}\r\n * @memberof module:mvcomponents/tilelist\r\n */\r\nexport class TileList<T> extends AWidget{\r\n\tprivate _tmpData: T[];\r\n\tprivate _data: T[];\r\n\tprivate _urlTemplate: string;\r\n\tprivate _islistview: boolean;\r\n\tprivate _selected_index: number;\r\n\tpublic activate:boolean;\t\r\n\tpublic onSelectItem:EventEmitter<T> = new EventEmitter<T>();\r\n\tpublic onScrolledToBottom:EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\tprivate scrollAtctived:boolean;\r\n\tprivate params:IParamTileList;\r\n\r\n\tconstructor(config:{urlTemplate:string}){\r\n\t\tsuper(\"div\", `<div class=\"headgridview col-xs-12 col-sm-12 col-md-12\"></div><div class=\"tilecellgrid col-xs-12 col-sm-12 col-md-12\"><div class=\"row_cells col\"></div></div>`);\r\n\t\tthis.params = {};\r\n\t\tthis._urlTemplate = config.urlTemplate;\r\n\t\tthis._data = [];\r\n\t\tthis._tmpData = [];\r\n\t\tthis._selected_index = -1;\r\n\t\tthis._islistview = true;\r\n\t\tjquery(this.element)\r\n\t\t\t.addClass(\"boxTileLine TileList\")\r\n\t\t\t.find(\".tilecellgrid\")\r\n\t\t\t.on(\"click\", \".tilecell\", this.onChangeItemHandler.bind(this));\r\n\t\t\r\n\t\tthis.activate = false;\r\n\t}\r\n\r\n\tprivate refreshItemRender(): void {\t\t\r\n\t\tif (this.getRowCell().length > 0) {\r\n\t\t\trequire([this._urlTemplate],(tpl_render:any)=>{\r\n\t\t\t\tlet nameConstructor:string = Object.keys(tpl_render)[0];\r\n\t\t\t\t_idom_.patch(\r\n\t\t\t\t\t\tthis.getRowCell()[0]\r\n\t\t\t\t\t\t,tpl_render[nameConstructor].bind(this)\r\n\t\t\t\t\t\t,this.getData()\r\n\t\t\t\t\t);\r\n\t\t\t\t/*\r\n\t\t\t\t_idom_.patch(this.getRowCell()[0],(data:any) => {\r\n\t\t\t\t\ttpl_render[nameConstructor](data,{test:\"ops\"})\r\n\t\t\t\t},this.getData());\r\n\t\t\t\t*/\r\n\t\t\t\t//this.index = this._selected_index;\r\n\t\t\t});\r\n\t\t}      \r\n\t}  \r\n\r\n\t/**\r\n\t * Atribui os dados que serão exibidos pela TileList. Toda vez que este método é chamado a listagem é atualizada.\r\n\t * @param {Array} data\r\n\t * @returns {TileList}\r\n\t */\r\n\tpublic setData(p_dta: T[]): this {\r\n\t\tif(p_dta){\r\n\t\t\tthis._data = p_dta;\r\n\t\t}else{\r\n\t\t\tthis._data = [];\r\n\t\t}\r\n\t\tthis.refreshItemRender();\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Retorna os dados que estão sendo exibidos pela TileList.\r\n\t * @returns {Array}\r\n\t * @see {@link TileList.setData}\r\n\t */\r\n\tpublic getData(): T[] {\r\n\t\treturn this._data;\r\n\t}\r\n\r\n\t/**\r\n\t* Atualiza visualmente o TileList.\r\n\t* @returns {TileList}\r\n\t*\r\n\t*/\r\n\tpublic refresh():this{\r\n\t\tthis.setData(this.getData());\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Índice do item selecionado da TileList.\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get index(): number {\r\n\t\treturn this._selected_index;\r\n\t}\r\n\r\n\t/**\r\n\t * Retorna a o item selecionado da TileList.\r\n\t * @returns {T}\r\n\t */\r\n\tpublic getSelectedItem(): T {\r\n\t\tif (this._data.length > this._selected_index &&  this._selected_index > -1) {\r\n\t\t\treturn this._data[this._selected_index];\r\n\t\t}\r\n\t\treturn null;       \r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @private\r\n\t * @param {Event} evt\r\n\t */\r\n\tprivate onChangeItemHandler(evt: Event): void {\t\t\r\n\t\tevt.preventDefault();\r\n\t\tevt.stopPropagation();\r\n\t\tthis.clearSelecteds();\r\n\t\tvar tgt:JQuery = jquery(evt.target);\r\n\t\tif (tgt.hasClass(\"tilecell\")) {\t\t\t\r\n\t\t\tthis._changeSelectedItem(tgt.addClass(\"selectedLine active\"), false);\r\n\t\t} else {\t\t\t\r\n\t\t\tthis._changeSelectedItem(tgt.closest(\".tilecell\").addClass(\"selectedLine active\"), false);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate getRowCell():JQuery{\r\n\t\treturn jquery(this.element).find(\".row_cells:first\");\r\n\t}\r\n\t\r\n\t/**\r\n\t * Remove o efeito de seleção do item selecionado da lista.\r\n\t * @returns {TileList}\r\n\t */\r\n\tpublic clearSelecteds():this{\r\n\t\tthis.getRowCell().find(\".selectedLine\").removeClass(\"selectedLine active\");\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Indica para TileList qual item ela deve selecionar.\r\n\t * @param p_index {number}\r\n\t * @returns {void}\r\n\t */\r\n\tpublic set index(p_index:number){\r\n\t\tif(p_index > -1 && p_index < this._data.length){\r\n\t\t\tlet old_index:number = this._selected_index;\r\n\t\t\tthis._selected_index = p_index;       \r\n\t\t\tthis.clearSelecteds();\r\n\t\t\tthis.getRowCell().find(`.tilecell:nth-child(${(this._selected_index+2)})`).addClass(\"selectedLine active\");\r\n\t\t\t//if(old_index!==p_index){\r\n\t\t\t\tthis.onSelectItem.emit(this.getSelectedItem());\r\n\t\t\t//};\r\n\t\t}\t\t\r\n\t}\r\n\r\n\tprivate _changeSelectedItem(tgt:JQuery,p_change_item:boolean=true): void {\r\n\t\tthis.index = parseInt(tgt.attr(\"data-indx\")),p_change_item;\r\n\t}\r\n\r\n\t/**\r\n\t * Indica o tamanho em \"px\" do \"height\" tilelist.\r\n\t * o evento onScrolledToBottom é ativado\r\n\t * @param height {number}\r\n\t * @returns {TileList}\r\n\t */\r\n\tpublic setHeight(height:number,unit:string = \"px\"):this{\r\n\t\tthis.setCssProperties({\r\n\t\t\theight:height+unit\r\n\t\t\t,minHeight:height+unit\r\n\t\t\t,overflow:\"auto\"\r\n\t\t});\r\n\t\tif(!this.scrollAtctived){\r\n\t\t\tthis.scrollAtctived = true;\r\n\t\t\tlet _this$_ = this;\r\n\t\t\tjquery(this.element).on(\"scroll\", function () {\r\n\t\t\t\tif(jquery(this).scrollTop() + jquery(this).innerHeight() >= jquery(this)[0].scrollHeight) {\r\n\t\t\t\t\t_this$_.onScrolledToBottom.emit(true);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * configura os parametros que poderão ser recuperados no template do tile-list.\r\n\t * esse método subscreve todos os parametros do objeto\r\n\t * @param params {Object}\r\n\t * @returns {TileList}\r\n\t */\r\n\tpublic setParams(params:IParamTileList):this{\r\n\t\tthis.params = params;\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * adiciona parametros para ser recuperada no template do tile-list.\r\n\t * esse método subscreve todos os parametros do objeto\r\n\t * @param params {Object}\r\n\t * @returns {TileList}\r\n\t */\r\n\tpublic addParams(params:IParamTileList):this{\r\n\t\tthis.params = Object.assign({},this.params,params);\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * recupera os parametros usados no template do tile-list.\r\n\t * @returns {Object}\r\n\t */\r\n\tpublic getParams():IParamTileList{\r\n\t\treturn this.params;\r\n\t}\r\n}\r\n"]}