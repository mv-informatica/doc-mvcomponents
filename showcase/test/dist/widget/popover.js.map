{"version":3,"sources":["../src/widget/popover.ts"],"names":[],"mappings":";;;IA0BA;QAA6B,mCAAO;QACnC,iBAAY,KAAY,EAAC,OAAc;YAAvC,YACC,kBAAM,KAAK,EACV,+EAE+B,OAAO,mBACrC,CACD,SAOD;YALA,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC;iBAClB,QAAQ,CAAC,mBAAmB,CAAC;iBAC7B,QAAQ,CAAC,KAAI,CAAC,cAAc,CAAC,6BAAiB,CAAC,MAAM,CAAC,CAAC;iBACvD,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;YAC1B,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;;QACtB,CAAC;QAOM,0BAAQ,GAAf,UAAgB,KAAY;YAC3B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;iBAClB,IAAI,CAAC,sBAAsB,CAAC;iBAC5B,MAAM,EAAE,CAAC;YACX,EAAE,CAAA,CAAC,KAAK,CAAC,CAAA,CAAC;gBACT,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;qBACnB,OAAO,CAAC,iCAA6B,KAAK,UAAO,CAAC,CAAC;YACrD,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAIO,gCAAc,GAAtB,UAAuB,SAA2B;YACjD,MAAM,CAAC,6BAAiB,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE,CAAC;QACnD,CAAC;QAEO,iCAAe,GAAvB,UAAwB,UAA4B;YACnD,MAAM,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBACpB,KAAK,wCAAiB,CAAC,OAAO,EAAE,MAAM,CAAC,SAAS,CAAC;gBACjD,KAAK,wCAAiB,CAAC,IAAI,EAAE,MAAM,CAAC,SAAS,CAAC;gBAC9C,KAAK,wCAAiB,CAAC,OAAO,EAAE,MAAM,CAAC,SAAS,CAAC;gBACjD,KAAK,wCAAiB,CAAC,OAAO,EAAE,MAAM,CAAC,SAAS,CAAC;gBACjD,KAAK,wCAAiB,CAAC,MAAM,EAAE,MAAM,CAAC,SAAS,CAAC;YACjD,CAAC;QACF,CAAC;QAQM,0BAAQ,GAAf,UAAgB,UAA4B;YAC3C,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;iBAClB,IAAI,CAAC,sBAAsB,CAAC;iBAC5B,GAAG,CAAC,EAAC,eAAe,EAAC,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,EAAC,CAAC,CAAC;YAC1D,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAOM,sBAAI,GAAX;YACC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;iBAClB,GAAG,CAAC,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC;iBACtB,IAAI,EAAE,CAAC;YACT,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAOM,sBAAI,GAAX;YACC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;iBAClB,IAAI,EAAE,CAAC;YACT,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAOM,wBAAM,GAAb;YACC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;iBAClB,MAAM,EAAE,CAAC;YACX,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QACF,cAAC;IAAD,CA9FA,AA8FC,CA9F4B,kBAAO,GA8FnC;IA9FY,0BAAO","file":"popover.js","sourcesContent":["import \"./assets/css/popover.css!\";\r\nimport {EventEmitter} from \"../core/event-emitter\";\r\nimport jquery = require(\"jquery\");\r\nimport {AWidget} from \"./abstract/a-widget\";\r\nimport {IPopover} from \"./interface/i-popover\";\r\nimport {EPopoverPlacement} from \"./enum/e-popover\";\r\nimport {EBasicColorStatus} from \"../component/enum/e-basic-color-status\";\r\n\r\n/**\r\n * Balão informativo que pode ser adicionado à um {@link Button} através do método [append()]{@link Button.append}.\r\n * O {@link Popover} será posicionado abaixo do {@link Button} e só será exibido se já tiver sido adicionado ao mesmo.\r\n * Para exibir o {@link Popover} utilize um dos métodos: {@link Popover.show}, {@link Popover.toggle}.\r\n * \r\n * <img src=\"../../doc_assets/popover_example.png\">\r\n * \r\n * @example\r\n * let p1:Popover = new Popover(\"Conteúdo o popover\", \"Título\");\r\n * let btn1:Button = new Button(\"show\");\r\n * btn1.append(p1);\r\n * btn1.addEvent(EMouseEvent.CLICK, () => {p1.toggle()});\r\n * \r\n * @export\r\n * @extends {AWidget}\r\n * @implements {IPopover}\r\n * @memberof module:mvcomponents/widget\r\n */\r\nexport class Popover extends AWidget implements IPopover {\r\n\tconstructor(title:string,content:string) {\r\n\t\tsuper(\"div\",\r\n\t\t\t`\r\n\t\t\t<div class=\"arrow\"></div>\r\n\t\t\t<div class=\"popover-content\">${content}</div>\r\n\t\t\t`\r\n\t\t);\r\n\r\n\t\tjquery(this.element)\r\n\t\t\t.addClass(\"MVPopover popover\")\r\n\t\t\t.addClass(this.parsePlacement(EPopoverPlacement.BOTTOM))\r\n\t\t\t.attr(\"role\", \"tooltip\");\r\n\t\tthis.setTitle(title);\t\r\n\t}\r\n\t/**\r\n\t * Informa o título \r\n\t * \r\n\t * @param {string} title\r\n\t * @returns {this}\r\n\t */\r\n\tpublic setTitle(title:string):this{\r\n\t\tjquery(this.element)\r\n\t\t\t.find(\".popover-title:first\")\r\n\t\t\t.remove();\r\n\t\tif(title){\r\n\t\t\tjquery(this.element)\r\n\t\t\t.prepend(`<h3 class=\"popover-title\">${title}</h3>`);\r\n\t\t}\t\t\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * Converte o valor do enum {@link EPopoverPlacement} para um valor válido do popover do Bootstrap\r\n\t */\r\n\tprivate parsePlacement(placement:EPopoverPlacement) : string{\r\n\t\treturn EPopoverPlacement[placement].toLowerCase();\r\n\t}\r\n\r\n\tprivate parseBasicColor(basicColor:EBasicColorStatus): string{\r\n\t\tswitch (basicColor) {\r\n\t\t\tcase EBasicColorStatus.SUCCESS: return \"#e4edfd\";\r\n\t\t\tcase EBasicColorStatus.INFO: return \"#d4eabb\";\r\n\t\t\tcase EBasicColorStatus.PRIMARY: return \"#d8d8d8\";\r\n\t\t\tcase EBasicColorStatus.WARNING: return \"#FFC107\";\r\n\t\t\tcase EBasicColorStatus.DANGER: return \"#ffbebe\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Informa a cor que o Popover será exibido \r\n\t * \r\n\t * @param {EBasicColorStatus} basicColor\r\n\t * @returns {this}\r\n\t */\r\n\tpublic setColor(basicColor:EBasicColorStatus): this{\r\n\t\tjquery(this.element)\r\n\t\t\t.find(\".popover-title:first\")\r\n\t\t\t.css({backgroundColor:this.parseBasicColor(basicColor)});\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Exibe o popover\r\n\t *  \r\n\t * @returns {this}\r\n\t */\r\n\tpublic show(): this {\r\n\t\tjquery(this.element)\r\n\t\t\t.css({display:\"block\"})\r\n\t\t\t.show();\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Esconde o popover \r\n\t * \r\n\t * @returns {this}\r\n\t */\r\n\tpublic hide(): this {\r\n\t\tjquery(this.element)\r\n\t\t\t.hide();\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Troca o estado do popover \r\n\t * \r\n\t * @returns {this}\r\n\t */\r\n\tpublic toggle(): this {\r\n\t\tjquery(this.element)\r\n\t\t\t.toggle();\r\n\t\treturn this;\r\n\t}\r\n}\r\n"]}