{"version":3,"sources":["../src/widget/toast.ts"],"names":[],"mappings":"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","file":"toast.js","sourcesContent":["import * as toastr from \"toastr\";\r\nimport \"./assets/css/toast.css!\";\r\nimport jquery = require(\"jquery\");\r\nimport {EventEmitter} from \"./../core/event-emitter\";\r\nimport {EToastPosition, EToastType} from \"./enum/e-toast\";\r\nimport {IToastConfig, IToast, IToastService} from \"./interface/i-toast\";\r\n\r\n/**\r\n * Toast que será exibido\r\n * \r\n * <img src=\"../../doc_assets/toast_example.png\" />\r\n * \r\n * @implements {IToast}\r\n * @memberof module:mvcomponents/widget\r\n */\r\nclass Toast implements IToast {\r\n\tprivate static map = {\r\n\t\t\"allowClose\": \"closeButton\",\r\n\t\t\"position\": \"positionClass\"\r\n\t};\r\n\r\n\tpublic onBeforeShow: EventEmitter<any> = new EventEmitter();\r\n\tpublic onShow: EventEmitter<any> = new EventEmitter();\r\n\tpublic onHide: EventEmitter<any> = new EventEmitter();\r\n\r\n\tconstructor(protected config: IToastConfig) { }\r\n\r\n\t/**\r\n\t * Exibe o toast \r\n\t * \r\n\t * @returns {this}\r\n\t */\r\n\tpublic show(): this {\r\n\t\tlet options = this.encode(this.config);\r\n\t\tlet {message, title, type} = options;\r\n\t\tthis.onBeforeShow.emit(null).done(() => {\r\n\t\t\tthis.getMethod(type)(message, title, options);\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n\tprivate getMethod(type: EToastType) {\r\n\t\tswitch (type) {\r\n\t\t\tcase EToastType.ERROR: return toastr.error;\r\n\t\t\tcase EToastType.INFO: return toastr.info;\r\n\t\t\tcase EToastType.SUCCESS: return toastr.success;\r\n\t\t\tcase EToastType.WARN: return toastr.warning;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate position(position: EToastPosition): string {\r\n\t\tswitch (position) {\r\n\t\t\tcase EToastPosition.BOTTOM_CENTER: return \"toast-bottom-center\";\r\n\t\t\tcase EToastPosition.BOTTOM_LEFT: return \"toast-bottom-left\";\r\n\t\t\tcase EToastPosition.BOTTOM_RIGHT: return \"toast-bottom-right\";\r\n\t\t\tcase EToastPosition.TOP_CENTER: return \"toast-top-center\";\r\n\t\t\tcase EToastPosition.TOP_LEFT: return \"toast-top-left\";\r\n\t\t\tcase EToastPosition.TOP_RIGHT: return \"toast-top-right\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate encode(options: IToastConfig): any {\r\n\t\tlet config: any = jquery.extend({}, options, {\r\n\t\t\tonShown: () => { this.onShow.emit(null); },\r\n\t\t\tonHidden: () => { this.onHide.emit(null); },\r\n\t\t\tposition: this.position(options.position)\r\n\t\t});\r\n\r\n\t\tlet map = Toast.map;\r\n\t\tfor (let prop in map) {\r\n\t\t\tlet value = config[prop];\r\n\t\t\tif (value) {\r\n\t\t\t\tconfig[map[prop]] = value;\r\n\t\t\t\tdelete config[prop];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn config;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Serviço que constrois instâncias de Toast \r\n * \r\n * @class ToastServiceStatic\r\n * @implements {IToastService}\r\n */\r\nclass ToastServiceStatic implements IToastService {\r\n\tpublic defaults: IToastConfig = {\r\n\t\tmessage: \"\",\r\n\t\ttype: EToastType.INFO,\r\n\t\tposition: EToastPosition.BOTTOM_LEFT,\r\n\t\ttimeOut: 5000\r\n\t};\r\n\r\n\t/**\r\n\t * Constroi um Toast do tipo `Info` \r\n\t * \r\n\t * @param {IToastConfig} options\r\n\t * @returns {IToast}\r\n\t */\r\n\tpublic info(options: string | IToastConfig): IToast {\r\n\t\treturn this.create(options, EToastType.INFO);\r\n\t}\r\n\r\n\t/**\r\n\t * Constroi um Toast do tipo `Warn` \r\n\t * \r\n\t * @param {IToastConfig} options\r\n\t * @returns {IToast}\r\n\t */\r\n\tpublic warn(options: string | IToastConfig): IToast {\r\n\t\treturn this.create(options, EToastType.WARN);\r\n\t}\r\n\r\n\t/**\r\n\t * Constroi um Toast do tipo `Error` \r\n\t * \r\n\t * @param {IToastConfig} options\r\n\t * @returns {IToast}\r\n\t */\r\n\tpublic error(options: string | IToastConfig): IToast {\r\n\t\treturn this.create(options, EToastType.ERROR);\r\n\t}\r\n\r\n\t/**\r\n\t * Constroi um Toast do tipo `Success` \r\n\t * \r\n\t * @param {IToastConfig} options\r\n\t * @returns {IToast}\r\n\t */\r\n\tpublic success(options: string | IToastConfig): IToast {\r\n\t\treturn this.create(options, EToastType.SUCCESS);\r\n\t}\r\n\r\n\tprivate create(options: string | IToastConfig, type: EToastType) {\r\n\t\tlet config: IToastConfig = typeof options === \"string\" ? { message: options } : options;\r\n\t\tconfig.type = type;\r\n\t\treturn new Toast(<IToastConfig>Object.assign({}, this.defaults, config));\r\n\t}\r\n}\r\n\r\nexport var ToastService: IToastService = new ToastServiceStatic();\r\n"]}