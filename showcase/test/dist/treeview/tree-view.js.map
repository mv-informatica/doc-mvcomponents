{"version":3,"sources":["../src/treeview/tree-view.ts"],"names":[],"mappings":";;;IAgCA,IAAY,iBAEX;IAFD,WAAY,iBAAiB;QAC5B,yDAAI,CAAA;QAAC,2DAAK,CAAA;IACX,CAAC,EAFW,iBAAiB,GAAjB,yBAAiB,KAAjB,yBAAiB,QAE5B;IAQD;QAA8B,oCAAO;QAGpC;YAAA,YACC,kBAAM,KAAK,EAAE,EAAE,CAAC,SAEhB;YAJM,cAAQ,GAAiC,IAAI,4BAAY,EAAmB,CAAC;YAGnF,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC;;QACrD,CAAC;QAIM,0BAAO,GAAd;YACO,MAAM,CAAC,IAAI,CAAC,OAAO,CAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;YACnD,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAIM,wBAAK,GAAZ;YACC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAClB,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAMM,0BAAO,GAAd,UAAe,MAAoB,EAAC,MAA+C,EAAC,QAAa;YAA7D,uBAAA,EAAA,SAAyB,iBAAiB,CAAC,IAAI;YAClF,IAAI,UAAU,GAAG,QAAQ,IAAQ,MAAM,CAAC,IAAI,CAAC,OAAO,CAAE,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;YAExE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAE,CAAC,MAAM,CAAC,aAAa,EAAE,UAAU,EAAE,MAAM,EAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;YAC9G,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAIM,kCAAe,GAAtB;YACK,IAAA,4DAA4F,EAA3F,UAAE,EAAC,kBAAM,EAAC,cAAI,EAAC,cAAI,EAAC,gBAAK,CAAmE;YACjG,MAAM,CAAC;gBACL,EAAE,EAAC,EAAE;gBACJ,MAAM,EAAC,EAAC,IAAI,EAAC,MAAM,CAAC,IAAI,EAAC,EAAE,EAAC,MAAM,CAAC,EAAE,EAAC;gBACtC,IAAI,EAAC,IAAI;gBACT,IAAI,EAAC,IAAI;gBACT,KAAK,OAAA;aACP,CAAC;QACH,CAAC;QAKM,2BAAQ,GAAf,UAAgB,OAAwB;YAAxC,iBAkBC;YAjBA,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA,CAAC;gBACjB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACd,MAAM,CAAC,IAAI,CAAC,OAAO,CAAE,CAAC,MAAM,CAAC;oBAClC,MAAM,EAAC;wBACN,MAAM,EAAC,OAAO;wBACb,gBAAgB,EAAC,IAAI;qBACtB;iBACD,CAAC,CAAC;gBACH,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,oBAAoB,EAAC,UAAC,GAAS,EAAC,IAAQ;oBAC/D,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,KAAI,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;gBAC9C,CAAC,CAAC,CAAC;YAEJ,CAAC;YAAA,IAAI,CAAA,CAAC;gBACsB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAE,CAAC,MAAM,CAAC,IAAI,CAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;gBAC5F,IAAI,CAAC,OAAO,EAAE,CAAC;YAChB,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QACF,eAAC;IAAD,CApEA,AAoEC,CApE6B,kBAAO,GAoEpC;IApEY,4BAAQ","file":"tree-view.js","sourcesContent":["import jquery = require(\"jquery\");\r\nimport \"jstree/dist/themes/default/style.min.css!\";\r\nimport \"jstree\";\r\n//import \"jstree-grid\";\r\nimport {SystemApplication} from \"../core/system-application\";\r\nimport {EventEmitter} from \"../core/event-emitter\";\r\nimport {AWidget} from \"../widget/abstract/a-widget\";\r\nimport {IDataComponent} from \"../component/interface/i-data-component\";\r\n\r\nexport interface INodeTreeView{\r\n\tid?: string|number; // will be autogenerated if omitted\r\n\ttext: string; // node text\r\n\ticon?: string; // string for custom\r\n\tstate?: {\r\n\t\topened?: boolean  // is the node open\r\n\t\tdisabled?: boolean  // is the node disabled\r\n\t\tselected?: boolean  // is the node selected\r\n\t};\r\n\tchildren?:INodeTreeView[];  // array of strings or objects\r\n\ta_attr?:{href:string,id?:string};\r\n}\r\n\r\nexport interface INodeTreeViewExtended extends INodeTreeView{\r\n\tparent:string;\r\n}\r\n\r\ninterface ITreeViewComponent{\r\n\trefresh():void;\r\n\tdestroy():void;\r\n\tsettings:{core:{data:INodeTreeView[]}};\r\n}\r\n\r\nexport enum ETreeViewPosition{\r\n\tLAST,FIRST\r\n}\r\n\r\n/**\r\n * <img src=\"../../doc_assets/treeview_example_1.png\" />\r\n * \r\n * @export\r\n * @memberof module:mvcomponents/treeview\r\n */\r\nexport class TreeView extends AWidget{\r\n\tprivate _loaded:boolean;\r\n\tpublic onSelect:EventEmitter<INodeTreeView[]> = new EventEmitter<INodeTreeView[]>();\r\n\tconstructor(){\r\n\t\tsuper(\"div\", \"\");\r\n\t\tjquery(this.element).addClass(\"TreeView col-xs-12\");\r\n\t}\r\n\t/**\r\n\t * @return {TreeView}\r\n\t */\r\n\tpublic refresh():this{\r\n\t\t(<any>jquery(this.element)).jstree(true).refresh();\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * @return {TreeView}\r\n\t */\r\n\tpublic clear():this{\t\r\n\t\tthis.setNodes([]);\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * @param p_node {INodeTreeView}\r\n\t * @param p_posi {ETreeViewPosition}\r\n\t * @return {TreeView}\r\n\t */\r\n\tpublic addNode(p_node:INodeTreeView,p_posi:ETreeViewPosition=ETreeViewPosition.LAST,p_parent?:any):TreeView{\r\n\t\tlet tmp_parent = p_parent||(<any>jquery(this.element)).jstree(\"get_selected\");\r\n\t\t//console.log(ETreeViewPosition[p_posi].toLowerCase());\r\n\t\t(<any>jquery(this.element)).jstree(\"create_node\", tmp_parent, p_node,ETreeViewPosition[p_posi].toLowerCase());\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * @return {INodeTreeView}\r\n\t */\r\n\tpublic getSelectedNode():INodeTreeView{\r\n\t\tlet {id,a_attr,icon,text,state} = (<any>jquery(this.element)).jstree(true).get_selected(true)[0];\r\n\t\treturn {\r\n\t\t\t\tid:id\r\n\t\t\t\t,a_attr:{href:a_attr.href,id:a_attr.id}\r\n\t\t\t\t,icon:icon\r\n\t\t\t\t,text:text\r\n\t\t\t\t,state\r\n\t\t};\r\n\t}\r\n\t/**\r\n\t * @param {INodeTreeView[]}\r\n\t * @return {INodeTreeView}\r\n\t */\r\n\tpublic setNodes(p_nodes: INodeTreeView[]): this {\t\t\r\n\t\tif(!this._loaded){\r\n\t\t\tthis._loaded = true;\r\n\t\t\t(<any>jquery(this.element)).jstree({\r\n\t\t\t\t\"core\":{\r\n\t\t\t\t\t\"data\":p_nodes\r\n\t\t\t\t\t,\"check_callback\":true\r\n\t\t\t\t}\r\n\t\t\t});\t\t\t\t\t\r\n\t\t\tjquery(this.element).on(\"select_node.jstree\",(evt:Event,data:any)=>{\r\n\t\t\t\tthis.onSelect.emit([this.getSelectedNode()]);\t\t\t\r\n\t\t\t});\r\n\t\t\t//this.onNodeClick.emit(this.getSelectedNode());\r\n\t\t}else{\r\n\t\t\t(<ITreeViewComponent>(<any>jquery(this.element)).jstree(true)).settings.core.data = p_nodes;\r\n\t\t\tthis.refresh();\r\n\t\t}\t\r\n\t\treturn this;\r\n\t}\r\n}\r\n"]}