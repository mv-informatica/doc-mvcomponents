{"version":3,"sources":["../src/container/view-pager.ts"],"names":[],"mappings":";;;IAmCA;QAA+B,qCAAuB;QACrD;YAAA,YACC,kBAAM,KAAK,EAAC,EAAE,CAAC,SAIf;YAFA,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,6CAA6C,CAAC;iBAC1E,QAAQ,CAAC,WAAW,CAAC,CAAC;;QACzB,CAAC;QAIM,4BAAQ,GAAf,UAAgB,QAAe;YAC9B,MAAM,CAAC,QAAQ,CAAC;iBACd,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,QAAQ,EAAE,CAAC;QACjB,CAAC;QACF,gBAAC;IAAD,CAfA,AAeC,CAf8B,wBAAU,GAexC;IAfY,8BAAS","file":"view-pager.js","sourcesContent":["import {AContainer} from \"./abstract/a-container\";\r\nimport {IRenderable} from \"../core/interface/i-renderable\";\r\nimport {EBasicColorStatus} from \"../component/enum/e-basic-color-status\";\r\nimport {IBlockContainer} from \"./interface/i-block-container\";\r\nimport {ICustomComponent} from \"../core/interface/i-custom-component\";\r\nimport {EventEmitter,IEventEmitterError} from \"../core/event-emitter\";\r\nimport jquery = require(\"jquery\");\r\n\r\n/**\r\n * <img width=\"100%\" src=\"../../doc_assets/viewpager_exemple_1.png\">\r\n * É um container raiz que pode ser renderizado em um elemento HTML. Todos os outros componentes são renderizados sobre ele.\r\n * Este componente não possui nenhuma identificação visual, como bordas, painel de título, etc.\r\n * @memberof module:mvcomponents/container\r\n * @example\r\n * import {Button} from \"mvcomponents/button\";\r\n * import {ViewPager, Box, ToolBar} from \"mvcomponents/container\";\r\n * import {Label} from \"mvcomponents/widget\";\r\n *\r\n *\r\n * let boxContainer:Box = new Box();\r\n *\r\n * boxContainer.append(new Label(\"\r\n *     Este Label está dentro de um Box,\r\n *     que está dentro de um ViewPager\r\n *     que possui uma borda vermelha e o tamanho 4.\r\n * \"));\r\n *\r\n * let page:ViewPager = new ViewPager();\r\n * //neste exemplo, alteramos o css do componente para identificá-lo visualmente\r\n * page.setCssProperties({\"margin-top\": \"15px\", \"border\": \"1px solid red\"});\r\n * page.append(boxContainer);\r\n * page.setSize(4);\r\n * page.appendTo(\"#conteudo\");\r\n * \r\n */\r\nexport class ViewPager extends AContainer<IRenderable> {      \r\n\tconstructor(){\r\n\t\tsuper(\"div\",\"\");\r\n\r\n\t\tjquery(this.element).addClass(\"col-xs-12 col-sm-12 col-md-12 col-lg-12 col\")\r\n\t\t\t.addClass(\"ViewPager\");\r\n\t}\r\n\t/**\r\n\t * @param p_target - Seletor que identifique o elemento HTML em que este componente deve ser renderizado\r\n\t */\r\n\tpublic appendTo(p_target:string):void{\r\n\t\tjquery(p_target)\r\n\t\t\t.append(jquery(this.element));\r\n\t\tthis.attached();\r\n\t}\r\n}\r\n"]}