{"version":3,"sources":["../src/container/view-stack.ts"],"names":[],"mappings":"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","file":"view-stack.js","sourcesContent":["import {AContainer} from \"./abstract/a-container\";\r\nimport {Box} from \"./box\";\r\nimport {Form} from \"./form\";\r\nimport \"./assets/css/view-stack.css!\";\r\nimport {Panel} from \"./panel\";\r\nimport {Tab} from \"./tab\";\r\nimport jquery = require(\"jquery\");\r\nimport {EventEmitter,IEventSubscribe} from \"../core/event-emitter\";\r\nimport {ICustomComponent} from \"../core/interface/i-custom-component\";\r\n\r\nexport type IContainerItemViewStack = Form<any> | Box | Tab | Panel | ICustomComponent;\r\nexport interface IViewStackState{\r\n\tindex:number;\r\n\tstate:string;\r\n}\r\n\r\n/**\r\n * Este container agrupa um conjunto de containers.\r\n * \r\n * \r\n * @example\r\n * import {ViewStack, Box} from \"mvcomponents/container\";\r\n * import {Label} from \"mvcomponents/widget\";\r\n * import {LoginForm} from \"./login-form\";\r\n *\r\n * let myViewStack: ViewStack = new ViewStack()\r\n *      .append(new LoginForm(),'login')\r\n *      .append(new Box(),'state2');\r\n *\r\n * this.append(myViewStack);\r\n * myViewStack.selectedState = 'login';\r\n * \r\n * @export\r\n * @memberof module:mvcomponents/container\r\n * @extends {AContainer}\r\n */\r\nexport class ViewStack extends AContainer<IContainerItemViewStack>{\r\n\tprivate renderableList:{state:string,renderable:IContainerItemViewStack}[];\r\n\tprivate _selectedIndex:number;\r\n\tpublic onChangeState:EventEmitter<IViewStackState> = new EventEmitter<IViewStackState>();\r\n\tconstructor() {\r\n\t\tsuper(\"div\", \"\");\r\n\t\tthis.renderableList=[];\r\n\t\tthis._selectedIndex = -1;\r\n\t\tjquery(this.element)\r\n\t\t\t.addClass(\"view-stack col-sm-offset-0 col-sm-12 col-xs-12\");\r\n\t\t\r\n\t}\r\n\tprivate prepareItemToInsert(item:IContainerItemViewStack,state:string=\"\"):void{\r\n\t\t//if(this.renderableList.length > 0){\r\n\t\t\titem.setVisible(false);\r\n\t\t//};\r\n\t\tthis.renderableList.push({state:state,renderable:item});\r\n\t}\r\n\r\n\t/**\r\n\t * Adiciona um item no ViewStack abaixo dos outros itens\r\n\t * @param item {IContainerItemViewStack}\r\n\t * @param state {string} identificador para o item inserido\r\n\t * @returns {ViewStack}\r\n\t */\t\r\n\tpublic append(item:IContainerItemViewStack,state:string=\"\"):this{\r\n\t\tthis.prepareItemToInsert(item,state);\t\t\r\n\t\tthis.insertItem(item,\"append\");\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Adiciona um item no ViewStack acima dos outros itens\r\n\t * @param item {IContainerItemViewStack}\r\n\t * @param state {string} identificador para o item inserido\r\n\t * @returns {ViewStack}\r\n\t */    \r\n\tpublic prepend(item:IContainerItemViewStack,state:string=\"\"):this{\r\n\t\tthis.prepareItemToInsert(item,state);\t\t\r\n\t\tthis.insertItem(item,\"prepend\");\r\n\t\treturn this;\r\n\t}\r\n\r\n\tprivate getIndexByState(state:string):number{\r\n\t\tlet indx:number=null;\r\n\t\tthis.renderableList.some((item,index)=>{\r\n\t\t\tif(item.state===state){\r\n\t\t\t\tindx=index;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t});\r\n\t\treturn indx;\r\n\t}\r\n\r\n\t/**\r\n\t * Seleciona o item do {ViewStack} pelo índice do elemento.\r\n\t * @param index {number}\r\n\t * @returns {void}\r\n\t */\r\n\tpublic set selectedIndex(index:number){\r\n\t\tthis.onChangeState\r\n\t\t\t.emit({index:index,state:this.renderableList[index] ? this.renderableList[index].state : \"\"})\r\n\t\t\t.done(() => {\r\n\t\t\t\tif(this._selectedIndex!==index && this.renderableList.length > 0 && (index < this.renderableList.length && index > -1)){\r\n\t\t\t\t\tlet lastIndexItem:number = this._selectedIndex;\r\n\t\t\t\t\tthis._selectedIndex = index;\t\t\t\t\t\t\r\n\t\t\t\t\tif(lastIndexItem > -1){\t\t\r\n\t\t\t\t\t\tjquery(this.renderableList[lastIndexItem].renderable.element).fadeOut(\"normal\",()=>{\r\n\t\t\t\t\t\t\tjquery(this.renderableList[this._selectedIndex].renderable.element).fadeIn(\"fast\");\r\n\t\t\t\t\t\t});\t\t\t\t\t\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tjquery(this.renderableList[this._selectedIndex].renderable.element).fadeIn(\"fast\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.onChangeState.emit({index:this._selectedIndex,state:this.renderableList[this._selectedIndex].state});\t\r\n\t\t\t\t}else if(index > -1 && this.renderableList.length && index < this.renderableList.length){\r\n\t\t\t\t\t//quando houver apenas um item\r\n\t\t\t\t\tthis._selectedIndex = index;\r\n\t\t\t\t\tjquery(this.renderableList[this._selectedIndex].renderable.element).fadeIn(\"fast\");\r\n\t\t\t\t}\r\n\t\t\t});\t\r\n\t}\r\n\r\n\t/**\r\n\t * Retorna o indice do elemento vísivel.\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get selectedIndex():number{\r\n\t\treturn this._selectedIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Seleciona o item do {ViewStack} pelo state (identificador) do elemento.\r\n\t * @param state {string}\r\n\t * @returns {void}\r\n\t */\r\n\tpublic set selectedState(state:string){\r\n\t\tlet selectedIndex:number = this.getIndexByState(state);\r\n\t\tthis.selectedIndex = selectedIndex;\t\r\n\t}\r\n\r\n\t/**\r\n\t * Retorna o state do elemento vísivel.\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get selectedState():string{\t\t\r\n\t\treturn this.renderableList[this._selectedIndex].state;\r\n\t}\r\n\r\n\t/**\r\n\t * Mostra o próximo item dentro do ViewStack.\r\n\t * @returns {ViewStack}\r\n\t */\t\r\n\tpublic next():this{\r\n\t\tthis.selectedIndex = this.selectedIndex+1;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Mostra o item anterior dentro do ViewStack.\r\n\t * @returns {ViewStack}\r\n\t */\r\n\tpublic prev():this{\t\r\n\t\tthis.selectedIndex = this.selectedIndex-1;\t\r\n\t\treturn this;\r\n\t}\r\n}\r\n"]}