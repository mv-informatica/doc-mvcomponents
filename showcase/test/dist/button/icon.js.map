{"version":3,"sources":["../src/button/icon.ts"],"names":[],"mappings":";;;IAwBA;QAA0B,gCAAgB;QAEzC;YAAA,YACC,kBAAM,GAAG,EAAC,QAAQ,CAAC,SAInB;YANO,eAAS,GAAQ,+BAA+B,CAAC;YAGxD,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC;iBAClB,IAAI,CAAC,MAAM,EAAC,GAAG,CAAC;iBAChB,QAAQ,CAAC,oBAAkB,KAAI,CAAC,SAAW,CAAC,CAAC;;QAChD,CAAC;QAuBM,sBAAO,GAAd,UAAe,SAAiB;YAC/B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;iBAClB,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC;iBAC3B,QAAQ,CAAC,SAAS,CAAC,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAeM,uBAAQ,GAAf,UAAgB,KAAY;YAC3B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,EAAC,KAAK,EAAC,KAAK,EAAC,CAAC,CAAC;YACxC,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAYM,yBAAU,GAAjB,UAAkB,OAAe;YAChC,EAAE,CAAC,CAAE,OAAQ,CAAC,CAAC,CAAC;gBACf,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;YAC7C,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;YAC1C,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QACF,WAAC;IAAD,CA1EA,AA0EC,CA1EyB,qCAAgB,GA0EzC;IA1EY,oBAAI","file":"icon.js","sourcesContent":["import jquery = require(\"jquery\");\r\nimport {AVisualComponent} from \"../component/abstract/a-visual-component\";\r\n\r\n/** \r\n * @classdesc Componente que simula icones \r\n * \r\n * <img src=\"../../doc_assets/iconbutton_example_1.png\" />\r\n *\r\n * @example\r\n * \r\n * import {Icon} from \"mvcomponents/button\";\r\n * import {EBasicColorStatus} from \"mvcomponents/component\"; \r\n * \r\n * let icon:Icon = new Icon()\r\n *     .setIcon(\"mv-basico-adicionar\")\r\n *     .setColor(EBasicColorStatus.DANGER)\r\n *     .setTooltip(\"Tooltip do Icon\");\r\n * \r\n * this.append(icon);\r\n * \r\n * @export\r\n * @extends {AVisualComponent}\r\n * @memberof module:mvcomponents/button\r\n */\r\nexport class Icon extends AVisualComponent{\r\n\tprivate _old_icon:string=\"glyphicon glyphicon-info-sign\";\r\n\tconstructor() {\r\n\t\tsuper(\"a\",\"<span>\");\r\n\t\tjquery(this.element)\r\n\t\t\t.attr(\"href\",\"#\")\r\n\t\t\t.addClass(`icon-component ${this._old_icon}`);\r\n\t}\r\n\t/**\r\n\t * Informa o icone.\r\n\t * \r\n\t * Verifica documentação dos icones em:\r\n\t * \r\n\t * {@link http://docs.mv.com.br/x/Gsm}\r\n\t * \r\n\t * Verificar icones em:\r\n\t * \r\n\t * mv-basico: {@link http://hercules-vs11.mvrec.local/mv-basico/}\r\n\t * \r\n\t * mv-hosp: {@link http://hercules-vs11.mvrec.local/mv-hosp/}\r\n\t * \r\n\t * \r\n\t * @example\r\n\t * \r\n\t * let icon:Icon = new Icon().setIcon(\"mv-basico-adicionar\");\r\n\t * \r\n\t * @param iconStyle {string} Icone que será exibido. (Ex.: \"mv-basico-adicionar\")\r\n\t * @return {Icon}\r\n\t * \r\n\t */\r\n\tpublic setIcon(iconStyle: string): this {        \r\n\t\tjquery(this.element)\r\n\t\t\t.removeClass(this._old_icon)\r\n\t\t\t.addClass(iconStyle);\r\n\t\tthis._old_icon = iconStyle;\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * Informa a cor do texto do Icon\r\n\t * \r\n\t * @example\r\n\t * \r\n\t * let icon1:Icon = new Icon().setIcon(\"mv-basico-adicionar\");\r\n\t * icon1.setColor(\"#457885\");\r\n\t * \r\n\t * let icon2:Icon = new Icon().setIcon(\"mv-basico-adicionar\");\r\n\t * icon2.setColor(\"purple\");\r\n\t * \r\n\t * @param  {string} color Texto para definir a cor do botão.(Ex.: \"red\",\"#000000\")\r\n\t * @return {Button}\r\n\t */\r\n\tpublic setColor(color:string): this {\r\n\t\tjquery(this.element).css({color:color});\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * Atribui ou substitui o Tooltip do Icon\r\n\t * \r\n\t * @example\r\n\t * \r\n\t * let icon:Icon = new Icon().setIcon(\"mv-basico-adicionar\");\r\n\t * icon.setTooltip('Tooltip do Icon');\r\n\t * \r\n\t * @param tooltip {string} Texto que deve ser exibido no Tooltip.\r\n\t * @return {Icon}\r\n\t */\r\n\tpublic setTooltip(tooltip: string): this {\r\n\t\tif ( tooltip ) {\r\n\t\t\tjquery(this.element).attr(\"title\", tooltip);\r\n\t\t} else {\r\n\t\t\tjquery(this.element).removeAttr(\"title\");\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n}\r\n"]}