{"version":3,"sources":["../src/treegrid/tree-grid.ts"],"names":[],"mappings":"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","file":"tree-grid.js","sourcesContent":["import \"./assets/css/tree-grid.css!\";\r\nimport \"jquery-treegrid/css/jquery.treegrid.css!\";\r\nimport jquery = require(\"jquery\");\r\nimport \"jquery-treegrid/js/jquery.treegrid.min\";\r\nimport { IRenderable } from \"../core/interface/i-renderable\";\r\nimport {EventEmitter} from \"../core/event-emitter\";\r\nimport {EViewSize} from \"../component/enum/e-view-size\";\r\nimport {ABasicComponent} from \"../component/abstract/a-basic-component\";\r\nimport _idom_ = require(\"incremental-dom\");\r\n\r\nexport interface ITreeGridColumn<T>{\r\n\tname: string;\r\n\ttitle: string;\r\n\trender?:(data:T)=>string;\r\n\ttemplate?:(data:any)=>any;\r\n\trenderElement?: (value: T) => IRenderable;\r\n\tgroup?:boolean;\r\n\tcheckable?:boolean;\r\n\tcheckableHeader?:boolean;\r\n\tcheckableGroup?:boolean;\r\n\tcheckableValue?:number|string|boolean;\r\n\tsize?:{size:number,display?:EViewSize[]}[];\r\n}\r\n\r\nexport interface ITreeGridRow{\r\n\tid:string;\r\n\tparent:string;\r\n}\r\n\r\nexport interface ITreeGridConfig{\r\n\texpandedIcon?:string;\r\n\tcollapsedIcon?:string;\r\n\tprimaryColumn?:string;\r\n\tparentColumn?:string;\r\n}\r\n\r\ninterface ITreeGridColumnExtended<T> extends ITreeGridColumn<T>{\r\n\t_size_:number;\r\n}\r\n\r\nexport interface ITreeGridGroup<T> {\r\n\tdata:T[];\r\n\tgroup:any;\r\n\tchecked?:boolean;\r\n}\r\n\r\n/**\r\n * <img src=\"../../doc_assets/treegrid_example_1.png\" />\r\n *\r\n * TreeGrid simples para exibição de dados tabulados de forma hierarquica atravez de algum atributo que represente o identificador do item agrupador.\r\n * @memberof module:mvcomponents/treegrid\r\n */\r\nexport class TreeGrid<T> extends ABasicComponent{\r\n\tpublic onSelect:EventEmitter<T[]> = new EventEmitter<T[]>();\r\n\tpublic onCollapse:EventEmitter<T> = new EventEmitter<T>();\r\n\tpublic onExpand:EventEmitter<T> = new EventEmitter<T>();\r\n\tprivate columns: ITreeGridColumn<T>[];\r\n\tprivate loaded:boolean;\r\n\tprivate data:T[];\r\n\tprivate primaryColumn:string;\r\n\tprivate parentColumn:string;\r\n\tprivate indexSelected:number;\r\n\tprivate expandedIcon:string;\r\n\tprivate collapsedIcon:string;\r\n\tprivate height:number;\r\n\tprivate selectedIndexs:number[];\r\n\tprivate selectedGroupIds:T[];\r\n\tprivate bottom:number;\r\n\t/**\r\n\t * Evento disparado apos dois cliques seguidos.\r\n\t */\r\n\tpublic onDoubleClick: EventEmitter<T> = new EventEmitter<T>();\r\n\tpublic onItemChecked: EventEmitter<T> = new EventEmitter<T>();\r\n\tpublic onItemUnChecked: EventEmitter<T> = new EventEmitter<T>();\r\n\tpublic onItemCheckeds: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\tpublic onGroupChecked: EventEmitter<ITreeGridGroup<T>> = new EventEmitter<ITreeGridGroup<T>>();\r\n\tconstructor(config?:ITreeGridConfig){\r\n\t\tsuper(\"div\",\"\");\r\n\t\tthis.setSize(12);\r\n\t\tthis.addStyleName(\"DataGridContainer TreeGrid\");\r\n\r\n\t\tthis.columns = [];\r\n\t\t\r\n\t\tthis.data = [];\r\n\t\tlet config_merged:ITreeGridConfig = Object.assign({\r\n\t\t\texpandedIcon:\"glyphicon glyphicon-triangle-bottom\"\r\n\t\t\t,collapsedIcon:\"glyphicon glyphicon-triangle-right\"\r\n\t\t\t,primaryColumn:\"id\"\r\n\t\t\t,parentColumn:\"parent\"\r\n\t\t},config);\r\n\t\tthis.primaryColumn = config_merged.primaryColumn;\r\n\t\tthis.parentColumn = config_merged.parentColumn;\r\n\t\tthis.expandedIcon = config_merged.expandedIcon;\r\n\t\tthis.collapsedIcon = config_merged.collapsedIcon;\r\n\t\tthis.selectedIndexs = [];\r\n\t\tthis.selectedGroupIds = [];\r\n\r\n\t\twindow.onresize = () => {\r\n\t\t\tthis.verifyScroll();\r\n\t\t};\r\n\t}\r\n\t\r\n\tprivate verifyScroll(){\r\n\t\tlet treegrid = jquery(this.element);\r\n\t\tlet elementTHead = treegrid.find(\"table:first\").find(\"thead\");\r\n\t\tlet elementTbody = treegrid.find(\"table:first\").find(\"tbody\");\r\n\r\n\t\tlet hasScroll = elementTbody.get(0).scrollHeight > (treegrid.outerHeight() - elementTHead.height());\r\n\t\tif(hasScroll && treegrid.height() > 0 && elementTHead.height() > 0){\r\n\t\t\tjquery(elementTbody)\r\n\t\t\t\t.css({\"height\":`calc( ${treegrid.height()}px - ${elementTHead.height()}px )`})\r\n\t\t\t\t.find(\"tr\").css({\"width\":\"calc( 100% + 18px )\"});\r\n\t\t\tlet lastCell = jquery(elementTbody).find(\"td.is-last-cell\");\r\n\t\t\tlastCell.toArray().forEach(element=>{\r\n\t\t\t\tjquery(element).css({\"padding-right\":\"18px\"});\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tjquery(elementTbody).css({\"height\":\"100%)\"});\r\n\t\t\tjquery(elementTbody).find(\"tr\").css({\"width\":\"100%\"});\r\n\t\t\tlet lastCell = jquery(elementTbody).find(\"td.is-last-cell\");\r\n\t\t\tlastCell.toArray().forEach(element=>{\r\n\t\t\t\tjquery(element).css({\"padding-right\":\"0px\"});\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tprivate render(){\r\n\t\tlet $treegrid = this;\r\n\t\tlet clreaders = \"\";\r\n\t\t\r\n\t\tif(!jquery(this.element).find(\"table:first\").length){\r\n\t\t\t$treegrid.columns.forEach((column:ITreeGridColumnExtended<T>,$indxhead) => {\r\n\t\t\t\tlet thStylesName = column._size_ ? column._size_:\"\";\r\n\t\t\t\tthStylesName += $indxhead === 0 ? \"is-first-cell\": $indxhead === $treegrid.columns.length-1 ? \"is-last-cell\":\"\";\r\n\t\t\t\tif(column.checkable && column.checkableHeader){\r\n\t\t\t\t\tclreaders += `<th class=\"is-header-checkable ${thStylesName}\" >\r\n\t\t\t\t\t\t\t\t<div class=\"is-box-checkbox\"> <input type=\"checkbox\"/> </div>\r\n\t\t\t\t\t\t\t</th>`;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tclreaders += `<th class=\"${thStylesName}\">\r\n\t\t\t\t\t\t\t\t${column.title}\r\n\t\t\t\t\t\t\t</th>`;                    \r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tlet tbodyStyleHeight = $treegrid.height ? `height:${$treegrid.height}px`:\"\";\r\n\t\t\tlet tableStyleNames = $treegrid.height ? \"DataGrid-InfiniteScroll\":\"\";\r\n\t\t\tlet tbla = `<table class=\"tree-grid table table-bordered table-hover table-striped ${tableStyleNames}\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t${clreaders}\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody style=\"${tbodyStyleHeight}\">\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>`;\r\n\t\t\tjquery(this.element)\r\n\t\t\t\t.append(tbla);\r\n\t\t}\r\n\r\n\t\tlet tbody = jquery(this.element)\r\n\t\t\t.find(\"tbody:first\");\r\n\r\n\t\ttbody.html(\"\");\r\n\t\t\r\n\t\t$treegrid.data.forEach((data,indxrow) => {\r\n\t\t\tlet trclass = `treegrid-${data[$treegrid.primaryColumn]}`;\r\n\t\t\ttrclass += data[$treegrid.parentColumn]?` treegrid-parent-${data[$treegrid.parentColumn]}`:\"\";\r\n\t\t\ttrclass += $treegrid.indexSelected === indxrow ? \" active \":\"\";\r\n\r\n\t\t\t//${data[$treegrid.primaryColumn]+(data[$treegrid.parentColumn]?\" treegrid-parent-\"+data[$treegrid.parentColumn]:\"\")+($treegrid.indexSelected === indxrow?\" active \":\"\")}\r\n\t\t\tlet trow = jquery(`<tr \r\n\t\t\t\t\tdata-index=\"${indxrow}\" \r\n\t\t\t\t\tclass=\"${trclass}\"\r\n\t\t\t\t\t>`);                                    \r\n\t\t\t\r\n\t\t\t$treegrid.columns.forEach((column:ITreeGridColumnExtended<T>,$indxhead) => {\r\n\t\t\t\tlet tcellStyle = `${column._size_?column._size_:\"\"}`;\r\n\t\t\t\ttcellStyle += column.name === $treegrid.parentColumn ? \" is-parent-column\":\"\";\r\n\t\t\t\ttcellStyle += $indxhead === 0 ? \"is-first-cell\":$indxhead === $treegrid.columns.length-1 ? \"is-last-cell\":\"\";\r\n\t\t\t\tlet tcell = jquery(`<td class=\"${tcellStyle}\">`);\r\n\t\t\t\t\r\n\t\t\t\tif(column.checkable){\r\n\t\t\t\t\tif(data[$treegrid.primaryColumn]){\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(column.checkableGroup){\r\n\t\t\t\t\t\t\ttcell.addClass(\"is-group-checkable\");\r\n\t\t\t\t\t\t\ttcell.html(`<div class=\"is-box-checkbox\">\r\n\t\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\t\tclass=\"checkable-group-${data[$treegrid.primaryColumn]}\" \r\n\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\" \r\n\t\t\t\t\t\t\t\t\t\tdata-index=\"${indxrow}\" \r\n\t\t\t\t\t\t\t\t\t\tdata-column-name=\"${column.name}\" \r\n\t\t\t\t\t\t\t\t\t\tdata-checkable-value=\"${column.checkableValue}\"/>\r\n\t\t\t\t\t\t\t\t\t</div>`);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\ttcell.addClass(\"is-item-checkable\");\r\n\t\t\t\t\t\t\ttcell.html(`<div class=\"is-box-checkbox\">\r\n\t\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\" \r\n\t\t\t\t\t\t\t\t\t\tdata-index=\"${indxrow}\" \r\n\t\t\t\t\t\t\t\t\t\tdata-column-name=\"${column.name}\" \r\n\t\t\t\t\t\t\t\t\t\tdata-checkable-value=\"${column.checkableValue}\" ${data[column.name] === column.checkableValue?\"checked\":\"\"}/>\r\n\t\t\t\t\t\t\t\t\t</div>`);\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\ttcell.addClass(\"is-item-checkable\");\r\n\t\t\t\t\t\ttcell.html(`<div class=\"is-box-checkbox\">\r\n\t\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\" \r\n\t\t\t\t\t\t\t\t\t\tdata-index=\"${indxrow}\" \r\n\t\t\t\t\t\t\t\t\t\tdata-column-name=\"${column.name}\" \r\n\t\t\t\t\t\t\t\t\t\tdata-checkable-value=\"${column.checkableValue}\" ${data[column.name] === column.checkableValue?\"checked\":\"\"}/>\r\n\t\t\t\t\t\t\t\t\t</div>`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}else if(column.render){\r\n\t\t\t\t\ttcell.html(column.render(data));\r\n\t\t\t\t}else if(column.renderElement){\r\n\t\t\t\t\ttcell.append(column.renderElement(data).element);\r\n\t\t\t\t}else if(column.template){\r\n\t\t\t\t\t_idom_.patch(tcell[0],column.template,data);\r\n\t\t\t\t}else if(column.group){\r\n\t\t\t\t\tlet arrayKeys = Object.keys(data);\r\n\t\t\t\t\tlet valid = arrayKeys.some(item=>{\r\n\t\t\t\t\t\treturn item.indexOf(\"_parent\") > -1 && !data[item];\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(valid){\r\n\t\t\t\t\t\tif(column.name.indexOf(\".\") > -1){\r\n\t\t\t\t\t\t\tlet arrayObj = column.name.split(\".\");                           \r\n\t\t\t\t\t\t\tlet valueGroup = this.getValueByPath(data,column.name);\r\n\t\t\t\t\t\t\ttcell.html(valueGroup||\"\");\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\ttcell.html(data[column.name]||\"\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\ttcell.html(\"\");\r\n\t\t\t\t\t}\t\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(column.name.indexOf(\".\") > -1){\r\n\t\t\t\t\t\tlet arrayObj = column.name.split(\".\");                           \r\n\t\t\t\t\t\tlet valueGroup = this.getValueByPath(data,column.name);\r\n\t\t\t\t\t\ttcell.html(valueGroup||\"\");\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\ttcell.html(data[column.name]||\"\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}                \r\n\t\t\t\ttrow.append(tcell);\r\n\t\t\t\tlet addChecked = !data[this.primaryColumn] && data[column.name] === column.checkableValue ? 1 : 0;\r\n\t\t\t\tif(column.checkable){\r\n\t\t\t\t\tthis.verifyAllCheckablesGroup(column,data,addChecked);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\ttbody.append(trow);\r\n\t\t\tthis.verifyScroll();\r\n\t\t});\r\n\t}\r\n\tprivate verifyAllCheckablesGroup(column:{name:string},row:T,addCheckedCount:number = 0){\r\n\t\tlet isGroup = false;\r\n\t\tif(row[this.primaryColumn] && !row[this.parentColumn]){\r\n\t\t\tisGroup = true;\r\n\t\t}\r\n\t\t\r\n\t\tlet dataChildrensByGroup = this.data.filter((item:T)=>{\r\n\t\t\treturn item[isGroup ? this.primaryColumn:this.parentColumn] === row[isGroup ? this.primaryColumn : this.parentColumn];\r\n\t\t});\r\n\r\n\t\tlet dataChildrensItens = this.data.filter((item:T)=>{\r\n\t\t\treturn !item[this.primaryColumn];\r\n\t\t});\r\n\r\n\t\tif(!isGroup){ \r\n\t\t\tlet tmp_checkbox_group = jquery(this.element).find(`tbody > tr.treegrid-${row[this.parentColumn]} > td.is-group-checkable > .is-box-checkbox > input`);\r\n\t\t\tlet tmp_checkboxs_checked_byGroup = jquery(this.element)\r\n\t\t\t\t.find(`tbody > tr.treegrid-parent-${row[this.parentColumn]} > td.is-item-checkable > .is-box-checkbox > input:checked`);\r\n\t\t\ttmp_checkbox_group.prop(\"checked\",(tmp_checkboxs_checked_byGroup.toArray().length + addCheckedCount) === dataChildrensByGroup.length);\r\n\t\t}\r\n\t\tlet tmp_checkbox_header = jquery(this.element).find(`thead > tr > th.is-header-checkable > .is-box-checkbox > input`);\r\n\t\tlet tmp_checkboxs_checked_all_itens = jquery(this.element).find(`tbody > tr > td.is-item-checkable > .is-box-checkbox > input:checked`);\r\n\t\ttmp_checkbox_header.prop(\"checked\",(tmp_checkboxs_checked_all_itens.length + addCheckedCount) === dataChildrensItens.length);\r\n\t}\r\n\r\n\tpublic attached():void{    \r\n\t\t//console.log(\"loaded\");      \r\n\t\tthis.loaded = true;\r\n\t\tthis.applyRender();               \r\n\t\tlet $this = this;\r\n\r\n\t\tjquery(this.element)\r\n\t\t\t\t.find(\".tree-grid:first\")\r\n\t\t\t\t.find(\"thead:first\")\r\n\t\t\t\t.on(\"click\",\"tr > th.is-header-checkable > .is-box-checkbox > input\",function (){\r\n\t\t\t\t\tlet tmp_tbody = jquery($this.element).find(\"tbody:first\");\r\n\t\t\t\t\tlet checked = jquery(this).prop(\"checked\");\r\n\t\t\t\t\tlet tmp_checkboxs_gourp = jquery(tmp_tbody).find(\"tr > td.is-group-checkable > .is-box-checkbox > input\");\r\n\t\t\t\t\tlet tmp_checkboxs_itens = jquery(tmp_tbody).find(\"tr > td.is-item-checkable > .is-box-checkbox > input\");\r\n\t\t\t\t\tlet indexItem = parseInt(jquery(this).attr(\"data-index\"));\r\n\t\t\t\t\t\r\n\t\t\t\t\tjquery(tmp_checkboxs_itens).toArray().forEach((item:any)=>{\r\n\t\t\t\t\t\tlet indexItem = parseInt(jquery(item).attr(\"data-index\"));\r\n\t\t\t\t\t\tlet columnName = jquery(item).attr(\"data-column-name\");\r\n\t\t\t\t\t\t$this.data[indexItem][columnName] = checked;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(checked){\r\n\t\t\t\t\t\ttmp_checkboxs_gourp.prop(\"checked\",true);\r\n\t\t\t\t\t\ttmp_checkboxs_itens.prop(\"checked\",true);\r\n\t\t\t\t\t\t$this.onItemCheckeds.emit(true);\r\n\t\t\t\t\t}else{                       \r\n\t\t\t\t\t\ttmp_checkboxs_gourp.prop(\"checked\",false);\r\n\t\t\t\t\t\ttmp_checkboxs_itens.prop(\"checked\",false);\r\n\t\t\t\t\t\t$this.onItemCheckeds.emit(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\tjquery(this.element)\r\n\t\t\t\t.find(\".tree-grid:first\")\r\n\t\t\t\t.find(\"tbody:first\")\r\n\t\t\t\t.on(\"click\",\"tr > td.is-group-checkable > .is-box-checkbox > input\",function (){  \r\n\t\t\t\t\tlet tmp_tbody = jquery($this.element).find(\"tbody:first\");              \r\n\t\t\t\t\tlet tmp_group = jquery(this).parents(\"tr:first\");\r\n\t\t\t\t\tvar classe = jquery(tmp_group).attr(\"class\").split(\" \").filter(valor=>{\r\n\t\t\t\t\t\tvar regex = new RegExp(\"[0-9]\");\r\n\t\t\t\t\t\treturn valor.indexOf(\"treegrid-\") > -1 && regex.test(valor);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tvar index = classe[0].replace(\"treegrid-\",\"\");\r\n\t\t\t\t\tlet tmp_checkboxs_itens = jquery(tmp_tbody)\r\n\t\t\t\t\t\t.find(`tr.treegrid-parent-${index} > td.is-item-checkable > .is-box-checkbox > input`);\r\n\t\t\t\t\tlet tmp_checkboxs_itens_unchecked = jquery(tmp_tbody)\r\n\t\t\t\t\t\t.find(`tr.treegrid-parent-${index} > td.is-item-checkable > .is-box-checkbox > input:not(:checked)`);\r\n\t\t\t\t\tlet checked = jquery(this).prop(\"checked\");\r\n\t\t\t\t\tlet dataReturn:T[] = [];\r\n\t\t\t\t\tjquery(tmp_checkboxs_itens_unchecked).toArray().forEach((item:any)=>{\r\n\t\t\t\t\t\tlet indexItem = parseInt(jquery(item).attr(\"data-index\"));\r\n\t\t\t\t\t\tlet columnName = jquery(item).attr(\"data-column-name\");\r\n\t\t\t\t\t\t$this.data[indexItem][columnName] = checked;\r\n\t\t\t\t\t\tdataReturn.push($this.data[indexItem]);\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\ttmp_checkboxs_itens.prop(\"checked\",checked);\r\n\r\n\t\t\t\t\tlet indexItem = parseInt(jquery(this).attr(\"data-index\"));\r\n\t\t\t\t\tlet objectGroup:ITreeGridGroup<T> = {data:dataReturn,group:$this.data[indexItem],checked:dataReturn && dataReturn.length > 0};\r\n\t\t\t\t\t$this.onGroupChecked.emit(objectGroup);\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet columnName = jquery(this).attr(\"data-column-name\");     \r\n\t\t\t\t\tlet checkableValue = jquery(this).attr(\"data-checkable-value\");   \r\n\t\t\t\t\t$this.verifyAllCheckablesGroup({name:columnName},$this.data[indexItem]);\r\n\t\t\t\t});\r\n\t\tjquery(this.element)\r\n\t\t\t\t.find(\".tree-grid:first\")\r\n\t\t\t\t.find(\"tbody:first\")\r\n\t\t\t\t.on(\"click\",\"tr > td.is-item-checkable > .is-box-checkbox > input\",function (){                \r\n\t\t\t\t\tlet checked = jquery(this).prop(\"checked\");\r\n\t\t\t\t\tlet indexItem = parseInt(jquery(this).attr(\"data-index\"));\r\n\t\t\t\t\tlet columnName = jquery(this).attr(\"data-column-name\");     \r\n\t\t\t\t\tlet checkableValue = jquery(this).attr(\"data-checkable-value\");\r\n\t\t\t\t\t$this.data[indexItem][columnName] = checked;\r\n\t\t\t\t\t$this.verifyAllCheckablesGroup({name:columnName},$this.data[indexItem]);\r\n\t\t\t\t\tif(jquery(this).is(\":checked\")){\r\n\t\t\t\t\t\t$this.onItemChecked.emit($this.data[indexItem]);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t$this.onItemUnChecked.emit($this.data[indexItem]);      \r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\tjquery(this.element)\r\n\t\t\t\t.find(\".tree-grid:first\")\r\n\t\t\t\t.find(\"tbody:first\")\r\n\t\t\t\t.on(\"click\",\"tr\",function (){\r\n\t\t\t\t\tlet tmpElem = jquery(this);\r\n\t\t\t\t\tlet tmpIndex:number = parseInt(tmpElem.attr(\"data-index\"));\r\n\t\t\t\t\tlet tmpItem:T = $this.data[tmpIndex];\r\n\t\t\t\t\t$this.indexSelected = tmpIndex;\r\n\r\n\t\t\t\t\tlet styleRules:string = this.className;\r\n\t\t\t\t\tlet isParent:boolean = styleRules.indexOf(\"treegrid-parent-\") > -1;\r\n\r\n\t\t\t\t\tif($this.hasGroup() && !tmpItem[$this.getPrimaryColumn()]){\r\n\t\t\t\t\t\t//item de um grupo virtual                                           \r\n\t\t\t\t\t\t$this.selectedIndexs = [tmpIndex];\r\n\t\t\t\t\t\t//console.log(\"hasgroup\",$this.getParentColumn())\r\n\t\t\t\t\t\t//$this.selectedGroupIds = [tmpElem.find(\"td:first\").text()];\r\n\t\t\t\t\t\t$this.onSelect.emit([tmpItem]);\r\n\t\t\t\t\t}else if(!$this.hasGroup()){                 \r\n\t\t\t\t\t\t//item normal (não agrupado)                                             \r\n\t\t\t\t\t\t$this.selectedIndexs = [tmpIndex];                       \r\n\t\t\t\t\t\t//$this.selectedGroupIds = [tmpItem[$this.getParentColumn()]];\r\n\t\t\t\t\t\t$this.selectedGroupIds = [tmpItem];\r\n\t\t\t\t\t\t$this.onSelect.emit([tmpItem]);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t//agrupador de itens\r\n\t\t\t\t\t\tlet group:T = <T>{};\r\n\t\t\t\t\t\tgroup[$this.getParentColumn()] = tmpElem.find(\"td:first\").text();\r\n\t\t\t\t\t\t$this.selectedGroupIds = [group];\r\n\t\t\t\t\t\t$this.selectedIndexs = [tmpIndex];    \r\n\t\t\t\t\t\t$this.onSelect.emit([tmpItem]);                       \r\n\t\t\t\t\t}\r\n\t\t\t\t\t$this.clearSelection();\r\n\t\t\t\t\ttmpElem.addClass(\"active\");\r\n\t\t\t\t})\r\n\t\t\t\t.on(\"dblclick\",\"tr\",function (evt:Event){\r\n\t\t\t\t\tlet styleRules:string = this.className;\r\n\t\t\t\t\tlet isParent:boolean = styleRules.indexOf(\"treegrid-parent-\") > -1;\r\n\t\t\t\t\tif(isParent){\r\n\t\t\t\t\t\t$this.selectedIndexs = [];\r\n\t\t\t\t\t}else if(                       \r\n\t\t\t\t\t\tstyleRules.indexOf(\"treegrid-expanded\") < 0 \r\n\t\t\t\t\t\t&& styleRules.indexOf(\"treegrid-collapsed\") < 0\r\n\t\t\t\t\t){\r\n\t\t\t\t\t\t$this.selectedGroupIds = [];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet tmpElem = jquery(this);\r\n\t\t\t\t\tlet tmpIndex:number = parseInt(tmpElem.attr(\"data-index\"));\r\n\t\t\t\t\tlet tmpItem:T = $this.data[tmpIndex];\r\n\t\t\t\t\t$this.onDoubleClick.emit(tmpItem);\r\n\t\t\t\t});        \r\n\t\tif(this.bottom){\r\n\t\t\tlet parent = jquery(this.element).parent();\r\n\t\t\tlet prevElement = jquery(this.element).prev();\r\n\t\t\tlet top = 0;\r\n\t\t\tif(parent.offset()){\r\n\t\t\t\ttop = parent.offset().top;\r\n\t\t\t}\r\n\t\t\tif(prevElement.length && prevElement.offset()){\r\n\t\t\t\ttop = prevElement.offset().top;\r\n\t\t\t}            \r\n\t\t\tjquery(this.element).css(\"height\",`calc( 100% - +${(this.bottom+top)}px )`);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * marcar como checado um ou varios itens da datagrid de acordo com o indice informado para a coluna marcada como checkable.\r\n\t * @param indice {number[]}\r\n\t * @return {TreeGrid}\r\n\t*/\r\n\tpublic setCheckeds(indexes:number[]):this{\r\n\t\tlet $grid = this;\r\n\t\tlet tmp_tbody = jquery(this.element).find(\"table:first > tbody:first\");\r\n\t\tlet checkedItens:number[] = [];\r\n\t\ttmp_tbody.find(\"tr > td.is-header-checkable > .is-box-checkbox > input\").each(function (index){\r\n\t\t\tlet itemjq = jquery(this);\r\n\t\t\tlet indexItem = parseInt(itemjq.attr(\"data-index\"));\r\n\t\t\tif(indexes.indexOf(index) >- 1){\r\n\t\t\t\titemjq.prop(\"checked\",\"checked\");\r\n\t\t\t}else{\r\n\t\t\t\titemjq.prop(\"checked\",null);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Retorna todos os valores representados pelas linhas que estão checadas na treegrid para a coluna que está marcada como \"checkable\".\r\n\t */\r\n\tpublic getCheckeds():T[]{\r\n\t\tlet selectedItems: T[] = [];\r\n\t\tlet checkeds = jquery(this.element)\r\n\t\t.find(\"table:first > tbody:first > tr > td.is-item-checkable > .is-box-checkbox > input:checked\")\r\n\t\t.toArray().forEach((item:any)=>{\r\n\t\t\tselectedItems.push(this.data[parseInt(jquery(item).attr(\"data-index\"))]);\r\n\t\t});\r\n\t\treturn selectedItems;\r\n\t}\r\n\r\n\t/**\r\n\t * Retorna um array com o indice de todos os valores checados na treegrid para a coluna que está marcada como \"checkable\".\r\n\t */\r\n\tpublic getCheckedsIndexes() :number[]{\r\n\t\tlet tmp_tbody = jquery(this.element).find(\"table:first > tbody:first\");\r\n\t\tlet checkedItens:number[] = [];\r\n\t\ttmp_tbody.find(\"tr > td.is-header-checkable > .is-box-checkbox > input\").each(function (index){\r\n\t\t\tif(jquery(this).prop(\"checked\")){\r\n\t\t\t\tcheckedItens.push(index);\r\n\t\t\t}            \r\n\t\t});\r\n\t\treturn checkedItens;\r\n\t}\r\n\r\n\t/**\r\n\t * Retorna todos os valores representados pelas linhas que estão selecionadas no treegrid.\r\n\t */\r\n\tpublic getSelectedItems() : T[] {\r\n\t\tlet selectedItems: T[] = [];\r\n\t\tthis.selectedIndexs.forEach(index => {\r\n\t\t\tif (this.data[index] !== undefined) {\r\n\t\t\t\tselectedItems.push(this.data[index]);\r\n\t\t\t}            \r\n\t\t});\r\n\t\treturn selectedItems;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Retorna todos os valores representados pelas linhas que estão selecionadas no treegrid.\r\n\t */\r\n\tpublic getSelectedGroups():T[] {\r\n\t\t/*        \r\n\t\treturn this.selectedGroupIds.map(groupId => {\r\n\t\t\tlet group = {};\r\n\t\t\tgroup[] = \r\n\t\t\treturn <T>{id:groupId}\r\n\t\t});\r\n\t\t*/\r\n\t\treturn this.selectedGroupIds;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {TreeGrid}\r\n\t*/\r\n\tpublic clearSelection():this{\r\n\t\tjquery(this.element).find(\"tbody:first\").find(\"tr.active\").removeClass(\"active\");\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * @return {TreeGrid}\r\n\t */\r\n\tpublic refresh():this{        \r\n\t\tif(this.loaded){\r\n\t\t\t//(<ICustomComponent>this).refreshRender();   \r\n\t\t\twindow.setTimeout(()=>{\r\n\t\t\t\tthis.applyRender();\r\n\t\t\t\tthis.verifyScroll();\r\n\t\t\t},0);            \r\n\t\t}\r\n\t\treturn this;      \r\n\t}\r\n\tprivate applyRender():this{\r\n\t\tthis.render();\r\n\t\tlet element = jquery(this.element);\r\n\t\tlet $this = this;\r\n\t\tif(!element.hasClass(\"is-rendered\")){\r\n\t\t\t(<any>element\r\n\t\t\t\t.find(\".tree-grid:first\"))\r\n\t\t\t\t.treegrid({\r\n\t\t\t\t\texpanderExpandedClass:this.expandedIcon\r\n\t\t\t\t\t,expanderCollapsedClass:this.collapsedIcon\r\n\t\t\t\t\t,onCollapse:function (){\r\n\t\t\t\t\t\tlet selectedIndx:number = parseInt(jquery(this).attr(\"data-index\"));\r\n\t\t\t\t\t\t$this.onCollapse.emit($this.data[selectedIndx]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t,onExpand:function (){\r\n\t\t\t\t\t\tlet selectedIndx:number = parseInt(jquery(this).attr(\"data-index\"));\r\n\t\t\t\t\t\t$this.onExpand.emit($this.data[selectedIndx]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\t(<any>element\r\n\t\t\t\t.find(\".tree-grid:first\"))\r\n\t\t\t\t.treegrid(\"render\");            \r\n\t\t}\r\n\t\tthis.verifyScroll();\r\n\t\treturn this;        \r\n\t}\r\n\t/**\r\n\t * @return {T[]}\r\n\t*/\r\n\tpublic getData():T[]{\r\n\t\tif(this.hasGroup()){\r\n\t\t\treturn this.data.filter(item => !item[this.getPrimaryColumn()]);\r\n\t\t}\r\n\t\treturn this.data;\r\n\t}\r\n\tprivate hasGroup():boolean{\r\n\t\treturn this.columns.some(column=>column.group);\r\n\t}\r\n\r\n\tprivate getValueByPath(item:any,path:string){\r\n\t\tlet $_this = this;\r\n\t\tlet valueGroup = path.split(\".\").reduce( function ( prev, curr ) {\r\n\t\t\t\t\t\t\t\treturn prev && prev[curr]?prev[curr]:null;\r\n\t\t\t\t\t\t\t}, item || this );\r\n\t\treturn valueGroup;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param data {Object[]}\r\n\t * @return {TreeGrid}\r\n\t */\r\n\tpublic setData(data:T[]):this{\r\n\t\tif(!data){\r\n\t\t\tthis.data = <T[]>jquery.extend([],[]); \r\n\t\t}else if(this.hasGroup()){\r\n\t\t\tlet data2:any[] = [];\r\n\t\t\tlet lastGroup:string = \"\";\r\n\t\t\tlet lastVtId:number = 0;\r\n\t\t\tthis.setPrimaryColumn(`_vt_${new Date().getTime()}_`);\r\n\t\t\tthis.setParentColumn(`${this.getPrimaryColumn()}_parent`);\r\n\r\n\t\t\tdata.forEach((item,indx)=>{\r\n\t\t\t\tlet groupObject = {};\r\n\t\t\t\tlet acumuledValue:string = \"\";\r\n\t\t\t\tthis.columns.filter(column=>column.group).forEach(column=>{\r\n\t\t\t\t\tif(column.name.indexOf(\".\") < 0){\r\n\t\t\t\t\t\tgroupObject[column.name] = item[column.name];\r\n\t\t\t\t\t\tacumuledValue+=item[column.name];\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tlet arrayObj = column.name.split(\".\");\r\n\t\t\t\t\t\tgroupObject[arrayObj[0]] = item[arrayObj[0]];\r\n\t\t\t\t\t\tacumuledValue+=this.getValueByPath(item,column.name);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif(lastGroup !== acumuledValue){\r\n\t\t\t\t\tlastGroup = acumuledValue;\r\n\t\t\t\t\tlastVtId++;\r\n\t\t\t\t\tgroupObject[this.getPrimaryColumn()] = lastVtId;\r\n\t\t\t\t\tgroupObject[this.getParentColumn()] = \"\";\r\n\t\t\t\t\tdata2.push(groupObject);\r\n\t\t\t\t}\r\n\t\t\t\titem[this.getPrimaryColumn()] = \"\";\r\n\t\t\t\titem[this.getParentColumn()] = lastVtId;\r\n\t\t\t\tdata2.push(item);\r\n\t\t\t});\r\n\t\t\tthis.data = <T[]>jquery.extend([],data2); \r\n\t\t}else{\r\n\t\t\tthis.data = <T[]>jquery.extend([],data); \r\n\t\t}\r\n\t\tthis.refresh();\r\n\t\treturn this;      \r\n\t}\r\n\tpublic clear():this{\r\n\t\tthis.setData([]);\r\n\t\treturn this;\r\n\t}\r\n\tpublic setHeight(height:number):this{\r\n\t\tthis.height = height;\r\n\t\tjquery(this.element).find(\"tbody:first\").css({\"height\":height});\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * método usado para indicar as colunas do tree grid.\r\n\t * \r\n\t * @example\r\n\t * this.mytreegrid.setColumns([\r\n\t *   {name: \"id\", title:\"cod\"}\r\n\t *   ,{name: \"name\", title:\"name\"}    \r\n\t * ])\r\n\t *\r\n\t * \r\n\t * @example\r\n\t * //exemplo com o metodo \"render\" retornando um valor custumizado para a coluna \"exp\"\r\n\t * this.mytreegrid.setColumns([\r\n\t *   {name: \"id\", title:\"cod\"}\r\n\t *   ,{name: \"name\", title:\"name\"}\r\n\t *   ,{name:\"exp\", title:\"exp.\", render:item => item.exp - 25 }    \r\n\t * ])\r\n\t *\r\n\t * @example\r\n\t * //exemplo com agrupamento dinâmico atravez da opção \"group:true\"\r\n\t * this.mytreegrid.setColumns([\r\n\t *   {name: \"id\", title:\"cod\" , group:true}\r\n\t *   ,{name: \"name\", title:\"name\"}  \r\n\t * ])\r\n\t * \r\n\t * //obs. o agrupamento só é aplicável para atributos de primeiro nível dos objetos da coleção\r\n\t * //caso seja necessário usar um atributo de segundo nivel é necessário realizar um \r\n\t * //array.map antes do setData do treegrid\r\n\t * @example com agrupamento dinâmico atravez da opção \"group:true\"\r\n\t * this.mytreegrid.setColumns([\r\n\t *   {name: \"id\", title:\"cod\"}\r\n\t *   ,{name: \"name\", title:\"name\"}\r\n\t *   ,{name: \"user.login\" , titel:\"login\" , group:true} //não vai funcionar, pois é um atributo de segundo nível.\r\n\t * ])\r\n\t * \r\n\t * //deve ser trocado por  \r\n\t * ,{name: \"_user_login\" , title:\"login\", group:true}\r\n\t * ...\r\n\t * //e durante o setData usado o metodo \"Array.map\" para a conversão (ou no servidor)\r\n\t * this.mytreegrid.setData(list.map(item => {  \r\n\t *   item._user_login = item.user.login; //campo virtual\r\n\t *   return item;\r\n\t * }))\r\n\t *         \r\n\t * @param columns {ITreeGridColumn[]}\r\n\t * @return {TreeGrid}\r\n\t */\r\n\tpublic setColumns(columns:ITreeGridColumn<T>[]):this{\r\n\t\tthis.columns = columns.map(col=>{\r\n\t\t\tlet tmpcol:ITreeGridColumn<T> = col;\r\n\t\t\tlet tmpsize:string = \"col-xs-1\";            \r\n\t\t\tif(col.size && col.size.length){ \r\n\t\t\t\ttmpsize = \"\";\r\n\t\t\t\tcol.size.forEach(view=>{ \r\n\t\t\t\t\tif(view.display && view.display.length){\r\n\t\t\t\t\t\ttmpsize += \" \";\r\n\t\t\t\t\t\ttmpsize += view\r\n\t\t\t\t\t\t\t\t\t.display\r\n\t\t\t\t\t\t\t\t\t.map(display => `col-${(<any>ABasicComponent.prototype).getSizeDesc.call(null,display)}-${view.size}`)\r\n\t\t\t\t\t\t\t\t\t.join(\" \");                      \r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\ttmpsize += `col-xs-${view.size}`;\r\n\t\t\t\t\t}\r\n\t\t\t\t});               \r\n\t\t\t}           \r\n\t\t\ttmpcol[\"_size_\"] = tmpsize;\r\n\t\t\tif(col.checkable){\r\n\t\t\t\tif(typeof col.checkableHeader === \"undefined\"){\r\n\t\t\t\t\tcol.checkableHeader = false;\r\n\t\t\t\t}\r\n\t\t\t\tif(typeof col.checkableGroup === \"undefined\"){\r\n\t\t\t\t\tcol.checkableGroup = false;\r\n\t\t\t\t}\r\n\t\t\t\tif(typeof col.checkableValue === \"undefined\"){\r\n\t\t\t\t\tcol.checkableValue = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn tmpcol;\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * @param columns {ITreeGridColumn[]}\r\n\t * @return {TreeGrid}\r\n\t */\r\n\tpublic addColumns(columns:ITreeGridColumn<T>[]):this{\r\n\t\tthis.columns.push(...columns);\r\n\t\tthis.refresh();\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * @param primaryColumn {string}\r\n\t * @return {TreeGrid}\r\n\t */\r\n\tpublic setPrimaryColumn(primaryColumn:string):this{\r\n\t\tthis.primaryColumn = primaryColumn;\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * @param parentColumn {string}\r\n\t * @return {TreeGrid}\r\n\t */\r\n\tpublic setParentColumn(parentColumn:string):this{\r\n\t\tthis.parentColumn = parentColumn;\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * @return {string}\r\n\t */\r\n\tpublic getPrimaryColumn():string{\r\n\t\treturn this.primaryColumn;\r\n\t}\r\n\t/**\r\n\t * @return {string}\r\n\t */\r\n\tpublic getParentColumn():string{\r\n\t\treturn this.parentColumn;\r\n\t}\r\n\r\n\t/**\r\n\t* \r\n\t* @param {number} bottom\r\n\t* @returns {this}\r\n\t*/\r\n\tpublic setBottom(bottom:number):this{\r\n\t\tthis.bottom = bottom;\r\n\t\treturn this; \r\n\t}\r\n}\r\n"]}