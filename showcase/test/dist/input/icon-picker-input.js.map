{"version":3,"sources":["../src/input/icon-picker-input.ts"],"names":[],"mappings":"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","file":"icon-picker-input.js","sourcesContent":["import jquery = require(\"jquery\");\r\nimport {ATextInput} from \"./abstract/a-text-input\";\r\nimport {InputAddon} from \"./input-addon\";\r\nimport {EMouseEvent} from \"../component/enum/e-mouse-event\";\r\n\r\n/**\r\n * @classdesc Componente utilizado para obtenção de icones\r\n * \r\n * <img src=\"../../doc_assets/choose_input_exemple.png\">\r\n * <img src=\"../../doc_assets/choose_input_exemple2.png\">\r\n * \r\n * @example \r\n * \r\n * import {IconPickerInput} from \"mvcomponents/input\";\r\n *\r\n * let iconPickerInput:IconPickerInput = new IconPickerInput();\r\n * \r\n * this.append(IconPickerInput);\r\n * \r\n * @export\r\n * @extends {ATextInput}\r\n * @memberof module:mvcomponents/input\r\n */\r\nexport class IconPickerInput extends ATextInput {\r\n\tprivate _valuefield: string = \"id\";\r\n\tprivate _labelfield: string = \"label\";\r\n\tprivate _urlservice: string;\r\n\tprivate _rooturlservice: string;\r\n\tpublic itemRender: (label:string,value:string) => string;\r\n\r\n\tconstructor() {\r\n\t\tsuper(\"text\", \"\");\r\n\r\n\t\tlet $element = jquery(this.element);\r\n\t\tlet handler: InputAddon;\r\n\r\n\t\tthis.addStyleName(\"IconPickerInput\");\r\n\t\tthis.itemRender = (label:string,value:string) => `<a \r\n\t\t\trole=\"presentation\"\r\n\t\t\tdata-value=\"${value}\"\r\n\t\t\tdata-label=\"${label}\"\r\n\t\t\tclass=\"col-xs-2 select_option_value\"\r\n\t\t\thref=\"#\">\r\n\t\t\t<span \r\n\t\t\t\taria-hidden=\"true\"\r\n\t\t\t\tclass=\"${value}\"\r\n\t\t\t\tdata-value=\"${value}\"\r\n\t\t\t\tdata-label=\"${label}\"></span>\r\n\t\t\t</a>`;\r\n\r\n\t\tthis\r\n\t\t\t.append(new InputAddon()\r\n\t\t\t\t.setIcon(\"glyphicon glyphicon-refresh\"))\r\n\t\t\t.append(handler = new InputAddon()\r\n\t\t\t\t.setIcon(\"glyphicon glyphicon-triangle-bottom\"));\r\n\r\n\t\t//TODO remover esse inline-style e transformar em uma classe\r\n\t\t$element.append(`\r\n\t\t\t<ul id=\"uid_${this._uid}_2\" style=\"z-index:9999;top:56px;left:37px;display:none;max-height:170px;overflow:auto\" \r\n\t\t\t  class=\"select-content dropdown-menu\" role=\"menu\">\r\n\t\t\t</ul>\r\n\t\t`);\r\n\r\n\t\thandler.addEvent(EMouseEvent.CLICK, event => this.resizeList(event));\r\n\r\n\t\tthis.getInput().hide();\r\n\t\t$element.find(\"ul.select-content\").on(\"click\", \".select_option_value\", (event:Event) => this.getFromUpList(event));\r\n\t}\r\n\t/**\r\n\t * Redimensionar a lista.\r\n\t * \r\n\t * @example\r\n\t * \r\n\t * let iconPickerInput:IconPickerInput = new IconPickerInput();\r\n\t * \r\n\t * @param {Event} evt Evento para redimensionar\r\n\t */\r\n\tpublic resizeList(evt: Event): void {\r\n\t\tevt.preventDefault();\r\n\t\tif(jquery(`#uid_${this._uid}_2`).css(\"display\") === \"block\") {\r\n\t\t\tthis.showList(false);\r\n\t\t}else if (!this.isDisabled()) {\r\n\t\t\tlet width = `${this.getInput().outerWidth()}px`;\r\n\t\t\tthis.showList(true);\r\n\t\t\tthis.getList().css({ width });\r\n\t\t}\r\n\t}\r\n\tprivate getList(){\r\n\t\treturn jquery(`#uid_${this._uid}_2`);\r\n\t}\r\n\t/**\r\n\t * Exibir a lista.\r\n\t * \r\n\t * @example\r\n\t * \r\n\t * let iconPickerInput:IconPickerInput = new IconPickerInput();\r\n\t * \r\n\t * @param {boolean} p_on Valor booleano que indica se vai exibir ou não a lista.\r\n\t */\r\n\tpublic showList(p_on: boolean) {\r\n\t\tthis.getList().css(\"display\", (p_on) ? \"block\" : \"none\");\r\n\t}\r\n\t/**\r\n\t * Exibir a lista.\r\n\t * \r\n\t * @example\r\n\t * \r\n\t * let iconPickerInput:IconPickerInput = new IconPickerInput();\r\n\t * \r\n\t * @param {boolean} p_on Valor booleano que indica se vai exibir ou não a lista.\r\n\t */\r\n\tpublic getFromUpList(evt: Event): void {\r\n\t\tevt.preventDefault();\r\n\t\tvar $target = jquery(evt.target);\r\n\t\tvar p_vl: string = $target.attr(\"data-value\");\r\n\t\tvar tmpDesc: string = $target.attr(\"data-label\");\r\n\r\n\t\tjquery(this.element)\r\n\t\t\t.attr({ \r\n\t\t\t\t\"data-prevalue\": p_vl\r\n\t\t\t\t, \"data-value\": p_vl \r\n\t\t\t})\r\n\t\t\t.find(\".addon1:first .icon1\")\r\n\t\t\t.removeClass()\r\n\t\t\t.addClass(`icon1 iconeinput ${p_vl}`);\r\n\r\n\t\tthis.showList(false);\r\n\t\tthis.getInput().val(tmpDesc).trigger(\"change\");\r\n\t}\r\n\t/**\r\n\t * Alterar o atributo do objeto que indica o valor do campo.\r\n\t * \r\n\t * @example\r\n\t * \r\n\t * let iconPickerInput:IconPickerInput = new IconPickerInput();\r\n\t * \r\n\t * @param {string} p_column Valor do campo.\r\n\t */\r\n\tpublic setValueField(p_column: string) {\r\n\t\tthis._valuefield = p_column;\r\n\t}\r\n\t/**\r\n\t * Alterar o texto do campo\r\n\t * \r\n\t * @example\r\n\t * \r\n\t * let iconPickerInput:IconPickerInput = new IconPickerInput();\r\n\t * \r\n\t * @param {string} p_column Texto do campo.\r\n\t */\r\n\tpublic setDescriptionField(p_column: string) {\r\n\t\tthis._labelfield = p_column;\r\n\t}\r\n\t/**\r\n\t * Recupera o valor do campo\r\n\t * \r\n\t * @example\r\n\t * \r\n\t * let iconPickerInput:IconPickerInput = new IconPickerInput();\r\n\t * \r\n\t * @return {string}\r\n\t */\r\n\tpublic getValueField(): string {\r\n\t\treturn this._valuefield;\r\n\t}\r\n\t/**\r\n\t * Recupera o label do campo\r\n\t * \r\n\t * @example\r\n\t * \r\n\t * let iconPickerInput:IconPickerInput = new IconPickerInput();\r\n\t * \r\n\t * @return {string}\r\n\t */\r\n\tpublic getLabelField(): string {\r\n\t\treturn this._labelfield;\r\n\t}\r\n\t/**\r\n\t * Altera os itens que serão disponibilizados no campo.\r\n\t * \r\n\t * @example\r\n\t * \r\n\t * let iconPickerInput:IconPickerInput = new IconPickerInput();\r\n\t * \r\n\t * @param {any[]} data Itens disponibilizados no campo.\r\n\t */\r\n\tpublic setData(data: any[]): void {\r\n\t\tvar tm: number = data.length;\r\n\t\tvar template = \"\";\r\n\t\tvar valueField: string = this.getValueField();\r\n\t\tvar labelField: string = this.getLabelField();\r\n\t\tif ( data ) {\r\n\t\t\ttemplate = data.reduce((template, item) => {\r\n\t\t\t\ttemplate += this.itemRender(item[labelField],item[valueField]);\r\n\t\t\t}, \"\");\r\n\t\t}\r\n\t\tjquery(this.element)\r\n\t\t\t.find(`#uid_${this._uid}_2`)\r\n\t\t\t.html(template);\r\n\t\ttemplate = null;\r\n\t}\r\n\t/**\r\n\t * Recupera o valor do item selecionado no campo.\r\n\t * \r\n\t * @example\r\n\t * \r\n\t * let iconPickerInput:IconPickerInput = new IconPickerInput();\r\n\t * \r\n\t * @return {string}\r\n\t */\r\n\tpublic getValue(): string {\r\n\t\treturn jquery(this.element).attr(\"data-value\");\r\n\t}\r\n\t/**\r\n\t * Recupera o texto do item selecionado no campo.\r\n\t * \r\n\t * @example\r\n\t * \r\n\t * let iconPickerInput:IconPickerInput = new IconPickerInput();\r\n\t * \r\n\t * @return {string}\r\n\t */\r\n\tpublic getText(): string {\r\n\t\treturn this.getInput().val();\r\n\t}\r\n\t/**\r\n\t * Recupera a descrição do item selecionado no campo.\r\n\t * \r\n\t * @example\r\n\t * \r\n\t * let iconPickerInput:IconPickerInput = new IconPickerInput();\r\n\t * \r\n\t * @return {string}\r\n\t */\r\n\tpublic getDesc(): string {\r\n\t\treturn this.getValue();\r\n\t}\r\n\t/**\r\n\t * Verifica se o campo está válido.\r\n\t * \r\n\t * @example\r\n\t * \r\n\t * let iconPickerInput:IconPickerInput = new IconPickerInput();\r\n\t * \r\n\t * @return {boolean}\r\n\t */\r\n\tpublic isValid(): boolean {\r\n\t\tvar vl = this.getValue();\r\n\t\tif (!vl) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn vl.length > 0 === true;\r\n\t}\r\n\t/**\r\n\t * Alterar o valor do campo.\r\n\t * \r\n\t * @example\r\n\t * \r\n\t * let iconPickerInput:IconPickerInput = new IconPickerInput();\r\n\t * \r\n\t * @param {string} value Valor do campo.\r\n\t * @return {IconPickerInput}\r\n\t */\r\n\tpublic setValue(value: string): this {\r\n\t\tvar tmpVl: string = \"\";\r\n\t\tif (!value) {\r\n\t\t\tjquery(this.element).attr({ \r\n\t\t\t\t\"data-prevalue\": value\r\n\t\t\t\t, \"data-value\": value \r\n\t\t\t});\r\n\t\t\tthis.getInput().val(\"\");\r\n\t\t\treturn this;\r\n\t\t} else {\r\n\t\t\ttmpVl = `${value}`;\r\n\t\t}\r\n\t\tif (tmpVl.length > 0) {\r\n\t\t\tjquery(this.element)\r\n\t\t\t\t.attr({ \r\n\t\t\t\t\t\"data-prevalue\": value\r\n\t\t\t\t\t, \"data-value\": value \r\n\t\t\t\t});\r\n\t\t\tvar tmpDesc = this.getDescFromServiceByValue(value);\r\n\t\t\tthis.getInput().val(tmpDesc);\r\n\t\t\tjquery(this.element)\r\n\t\t\t\t.find(\".addon1:first .icon1\")\r\n\t\t\t\t.removeClass()\r\n\t\t\t\t.addClass(`icon1 iconeinput ${value}`);\r\n\t\t} else {\r\n\t\t\tthis.getInput().val(\"\");\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * Recupera a descrição do item selecionado no campo pelo valor.\r\n\t * \r\n\t * @example\r\n\t * \r\n\t * let iconPickerInput:IconPickerInput = new IconPickerInput();\r\n\t * \r\n\t * @param {string} p_vl Valor do campo.\r\n\t * @return {string}\r\n\t */\r\n\tpublic getDescFromServiceByValue(p_vl: string): string {\r\n\t\tvar tmpDesc = \"\";\r\n\t\tjquery(`#uid_${this._uid}_2 .select_option_value`)\r\n\t\t\t.each(function () {\r\n\t\t\t\tvar item = jquery(this);\r\n\t\t\t\tif (item.attr(\"data-value\") === p_vl) {\r\n\t\t\t\t\ttmpDesc = item.attr(\"data-label\");\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\t\treturn tmpDesc;\r\n\t}\r\n}\r\n"]}