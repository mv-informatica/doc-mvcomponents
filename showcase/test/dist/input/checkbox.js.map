{"version":3,"sources":["../src/input/checkbox.ts"],"names":[],"mappings":";;;IAmBA;QAA8B,oCAAe;QAI5C,kBAAY,KAAa,EAAE,UAAkB;YAA7C,YACC,kBAAM,KAAK,EAAE,EAAE,CAAC,SAehB;YAnBS,kBAAY,GAAQ,IAAI,CAAC;YACzB,oBAAc,GAAQ,KAAK,CAAC;YAKrC,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC;iBAClB,QAAQ,CAAC,+BAA+B,CAAC;iBACzC,IAAI,CACJ,8CAC+B,KAAK,gKAIhC,UAAU,sDAGb,CACD,CAAC;;QACJ,CAAC;QAES,2BAAQ,GAAlB;YACC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC5C,CAAC;QAMM,+BAAY,GAAnB,UAAoB,EAAU;YAC7B,EAAE,CAAA,CAAC,EAAE,CAAC,CAAA,CAAC;gBACN,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;qBAClB,IAAI,CAAC,sBAAsB,CAAC;qBAC5B,IAAI,EAAE,CAAC;YACV,CAAC;YAAA,IAAI,CAAA,CAAC;gBACL,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;qBAClB,IAAI,CAAC,sBAAsB,CAAC;qBAC5B,IAAI,EAAE,CAAC;YACV,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAKM,2BAAQ,GAAf,UAAgB,KAAU;YACzB,IAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC;YAC7D,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAWM,4BAAS,GAAhB;YACC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;QACvC,CAAC;QAIM,2BAAQ,GAAf;YACC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC;QACnE,CAAC;QAEM,8BAAW,GAAlB,UAAmB,QAAgB;YAClC,OAAO,CAAC,IAAI,CAAC,oFAAoF,CAAC,CAAC;YACnG,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAEM,8BAAW,GAAlB;YACC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;QACzC,CAAC;QAaM,kCAAe,GAAtB,UAAuB,KAAa;YACnC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAYM,oCAAiB,GAAxB,UAAyB,KAAa;YACrC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QACF,eAAC;IAAD,CA7GA,AA6GC,CA7G6B,yBAAU,GA6GvC;IA7GY,4BAAQ","file":"checkbox.js","sourcesContent":["import \"./assets/css/checkbox.css!\";\r\nimport {ABaseInput} from \"./abstract/a-base-input\";\r\nimport {InputAddon} from \"./input-addon\";\r\nimport jquery = require(\"jquery\");\r\n\r\n/**\r\n * <img src=\"../../doc_assets/checkbox_input_exemple.png\">\r\n * \r\n * @example\r\n *  \r\n * let checkBox:CheckBox = new CheckBox(\"Disponivel para testes?\", \"Sim\")\r\n *     .setCheckedValue(\"Y\");\r\n * \r\n * @export\r\n * @extends {AInput}\r\n * @param {string} label Rótulo do CheckBox\r\n * @param {string} innerlabel Rótulo interno do CheckBox\r\n * @memberof module:mvcomponents/input\r\n */\r\nexport class CheckBox extends ABaseInput<any> {\r\n\tprotected checkedValue: any = true;\r\n\tprotected uncheckedValue: any = false;\r\n\r\n\tconstructor(label: string, innerlabel: string) {\r\n\t\tsuper(\"div\", \"\");\r\n\r\n\t\tjquery(this.element)\r\n\t\t\t.addClass(\"CheckBox form-group col-xs-12\")\r\n\t\t\t.html(\r\n\t\t\t\t`\r\n\t\t\t\t<label class=\"control-label\">${label}</label>\r\n\t\t\t\t<div class=\"col-xs-12 input-group input-group-sm checkbox\">\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\t<input type=\"checkbox\"/>\r\n\t\t\t\t\t\t${innerlabel}   \r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t`\r\n\t\t\t); \r\n\t}\r\n\r\n\tprotected getInput():JQuery {\r\n\t\treturn jquery(this.element).find(\":input\");\r\n\t}\r\n\t/**\r\n\t* Configuração a exibição do label do checkbox\r\n\t* @param {boolean} on\r\n\t* @return {CheckBox}\r\n\t*/\r\n\tpublic displayLabel(on:boolean):this{\r\n\t\tif(on){\r\n\t\t\tjquery(this.element)\r\n\t\t\t\t.find(\".control-label:first\")\r\n\t\t\t\t.show();\r\n\t\t}else{\r\n\t\t\tjquery(this.element)\r\n\t\t\t\t.find(\".control-label:first\")\r\n\t\t\t\t.hide();\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritdoc \r\n\t */\r\n\tpublic setValue(value: any): this {\r\n\t\tthis.getInput().prop(\"checked\", value === this.checkedValue);\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * Verifica se o ChekBox está checado.\r\n\t * \r\n\t * @example\r\n\t * \r\n\t * let check:CheckBox = new CheckBox(\"ativo\",\"sim\");\r\n\t * check.isChecked();\r\n\t * \r\n\t * @return {boolean}\r\n\t */\r\n\tpublic isChecked():boolean {\r\n\t\treturn this.getInput().is(\":checked\");\r\n\t}\r\n\t/**\r\n\t * @inheritdoc \r\n\t */\r\n\tpublic getValue(): string {\r\n\t\treturn this.isChecked() ? this.checkedValue : this.uncheckedValue;\r\n\t}\r\n\r\n\tpublic setRequired(required:boolean):this{\r\n\t\tconsole.warn(\"mv-components: metodo 'CheckBox.setRequired' não deve ser usado para o 'CheckBox'!\");\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic getRequired():boolean{\r\n\t\treturn this.hasStyleName(\"is-required\");\r\n\t}\r\n\r\n\t/**\r\n\t * Informa qual valor será obtido pelo 'getValue()' quando o componente estiver marcado.\r\n\t * \r\n\t * @example\r\n\t * \r\n\t * let checkBox:CheckBox = new CheckBox(\"Disponivel para testes?\", \"Sim\")\r\n\t *     .setCheckedValue(\"Y\");\r\n\t * \r\n\t * @param {string} value\r\n\t * @return {CheckBox}\r\n\t */\r\n\tpublic setCheckedValue(value: string): this {\r\n\t\tthis.checkedValue = value;\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * Informa qual volor será obtido pelo 'getValue()' quando o componente estiver desmarcado.\r\n\t * \r\n\t * @example\r\n\t * \r\n\t * let checkBox:CheckBox = new CheckBox(\"Disponivel para testes?\", \"Sim\")\r\n\t *     .setCheckedValue(\"N\");\r\n\t * \r\n\t * @param {string} value\r\n\t * @return {CheckBox}\r\n\t */\r\n\tpublic setUncheckedValue(value: string): this {\r\n\t\tthis.uncheckedValue = value;\r\n\t\treturn this;\r\n\t}\r\n}\r\n"]}