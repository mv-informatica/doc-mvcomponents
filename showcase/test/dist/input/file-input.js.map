{"version":3,"sources":["../src/input/file-input.ts"],"names":[],"mappings":"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","file":"file-input.js","sourcesContent":["import \"./assets/css/file-input.css!\";\r\nimport {EventEmitter} from \"../core/event-emitter\";\r\nimport {AInput} from \"./abstract/a-input\";\r\nimport {InputAddon} from \"./input-addon\";\r\nimport {EInputEvent} from \"../component/enum/e-input-event\";\r\nimport {EMouseEvent} from \"../component/enum/e-mouse-event\";\r\nimport jquery = require(\"jquery\");\r\n\r\nexport interface IFileSelected {\r\n\tfilesCount: number;\r\n\tfileLabel: string;\r\n}\r\n\r\n/**\r\n * @classdesc Componente utilizado para obtenção de arquivos\r\n *  \r\n * <img src=\"../../doc_assets/file_input_exemple.png\">\r\n * \r\n * @example\r\n * \r\n * import {FileInput} from \"mvcomponents/input\";\r\n *  \r\n * let fileInput:FileInput = new FileInput(\"Selecione um arquivo...\")\r\n *     .setAccept(\"audio/*,video/*,image/*,MIME_type\")\r\n *     .setPlaceholder(\"Arquivo...\");\r\n * \r\n * this.append(fileInput);\r\n * \r\n * @export\r\n * @extends {AInput}\r\n * @param {string} [placeholder=Nenhum arquivo selecionado] Texto para informar ao usuário que não existe arquivo selecionado.\r\n * @memberof module:mvcomponents/input\r\n */\r\nexport class FileInput extends AInput<File> {\r\n\tprivate handler: InputAddon;\r\n\tprivate display: JQuery;\r\n\tpublic onSelectFile: EventEmitter<IFileSelected> = new EventEmitter<IFileSelected>();\r\n\r\n\tconstructor(placeholder: string = \"Nenhum arquivo selecionado.\") {\r\n\t\tsuper(\"file\");\r\n\r\n\t\tjquery(this.element).find(\"input:first\").addClass(\"real-file-input\");\r\n\r\n\t\tthis.addStyleName(\"FileInput\")\r\n\t\t\t.append(this.handler = new InputAddon()\r\n\t\t\t\t.addStyleName(\"is-clickable\")\r\n\t\t\t\t.setIcon(\"glyphicon glyphicon-folder-open\"));\r\n\r\n\t\tthis.handler.addEvent(EMouseEvent.CLICK, event => this.getRealFileInput().click());\r\n\t\tthis.display = jquery(\"<input class=\\\"file-display form-control\\\" readonly />\").insertBefore(this.getRealFileInput());\r\n\r\n\t\tthis.addEvent(EInputEvent.CHANGE, event => {\r\n\t\t\tlet $input:HTMLInputElement = <HTMLInputElement> this.getRealFileInput()[0];\r\n\t\t\t\r\n\t\t\t//console.log($input);\r\n\r\n\t\t\tlet files = $input.files;\r\n\r\n\t\t\tthis.onSelectFile.emit({\r\n\t\t\t\tfilesCount: files.length,\r\n\t\t\t\tfileLabel: $input.value\r\n\t\t\t});\r\n\r\n\t\t\tthis.display.val($input.value);\r\n\t\t});\r\n\r\n\t\tthis.setPlaceholder(placeholder);\r\n\t}\r\n\tprivate getRealFileInput(){\r\n\t\treturn jquery(this.element).find(\".real-file-input:first\");\r\n\t}\r\n\t\r\n\t/**\r\n\t * Altera os tipos de arquivos aceitos pelo FileInput.\r\n\t * \r\n\t * @example\r\n\t * \r\n\t * let fileInput:FileInput = new FileInput(\"Selecione uma imagem...\")\r\n\t *     .setAccept(\"image/*\");\r\n\t * let fileInput:FileInput = new FileInput(\"Apenas arquivos zipados...\")\r\n\t *     .setAccept(\".zip\");\r\n\t * \r\n\t * @param {string} accept Tipos de arquivos aceitos pelo FileInput. (Ex.: \"audio/*,video/*,image/*,MIME_type\")\r\n\t * @returns {FileInput}\r\n\t */\r\n\tpublic setAccept(accept: string): this {\r\n\t\tthis.getRealFileInput().attr(\"accept\", accept);\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * Altera o \"placeholder\" do FileInput\r\n\t * \r\n\t * @example\r\n\t * \r\n\t * let fileInput:FileInput = new FileInput(\"Selecione uma imagem...\")\r\n\t *     .setPlaceholder(\"Selecione um arquivo...\");\r\n\t * \r\n\t * @param {string} placeholder Texto que irá aparecer para auxiliar o usuário.\r\n\t * @returns {FileInput}\r\n\t */\r\n\tpublic setPlaceholder(placeholder: string): this {\r\n\t\tthis.display.attr(\"placeholder\", placeholder);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Retorna o arquivo do campo FileInput.\r\n\t * \r\n\t * @example\r\n\t * \r\n\t * let fileInput:FileInput = new FileInput(\"Selecione um arquivo...\");\r\n\t * \r\n\t * let file:File = fileInput.getValue();\r\n\t * \r\n\t * @return {File}\r\n\t */\r\n\tpublic getValue(): File {\r\n\t\tlet $input:HTMLInputElement = <HTMLInputElement> this.getRealFileInput()[0];\r\n\t\treturn ( $input.files && $input.files.length ) ? $input.files[0] : null;\r\n\t}\r\n\r\n\tpublic encode(value: File): string {\r\n\t\tthrow new Error(\"Método não disponível\");\r\n\t}\r\n\r\n\tpublic decode(value: string): File {\r\n\t\tthrow new Error(\"Método não disponível\");\r\n\t}\r\n\t/**\r\n\t * Altera o arquivo do campo FileInput.\r\n\t * \r\n\t * @example\r\n\t * \r\n\t * let file:File = new File([new Blob()], \"image.png\", {type:\"image/png\"});\r\n\t * \r\n\t * let fileInput:FileInput = new FileInput(\"Selecione uma imagem...\")\r\n\t *     .setAccept(\"image/*\");\r\n\t * \r\n\t * fileInput.setValue(file);\r\n\t * \r\n\t * @param {File} file Arquivo alterado no campo FileInput.\r\n\t * @return {File}\r\n\t */\r\n\tpublic setValue(file: File): this {\r\n\t\tif ( !file ) {\r\n\t\t\tthis.clear();\r\n\t\t\treturn this;\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Método não disponível\"); \r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Limpa o campo FileInput.\r\n\t * \r\n\t * @example\r\n\t * \r\n\t * let file:File = new File([new Blob()], \"image.png\", {type:\"image/png\"});\r\n\t * \r\n\t * let fileInput:FileInput = new FileInput(\"Selecione uma imagem...\")\r\n\t *     .setAccept(\"image/*\");\r\n\t * \r\n\t * fileInput.setValue(file);\r\n\t * fileInput.clear(); // Limpa o campo.\r\n\t * \r\n\t * fileInput.getValue(); // Retorna null.\r\n\t * \r\n\t * \r\n\t * @return {FileInput}\r\n\t */\r\n\tpublic clear(): this {\r\n\t\tlet $input:HTMLInputElement = <HTMLInputElement> this.getRealFileInput()[0];\r\n\t\t$input.value = \"\";\r\n\t\tjquery(this.element).find(\".file-display:first\").val(\"\");\r\n\t\treturn this;\r\n\t}\r\n}\r\n"]}